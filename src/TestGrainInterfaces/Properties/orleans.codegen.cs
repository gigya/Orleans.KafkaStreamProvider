//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace TestGrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    using Orleans.Streams;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class BatchProducerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IBatchProducerGrain> instead.")]
                        public static IBatchProducerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IBatchProducerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IBatchProducerGrain> instead.")]
                        public static IBatchProducerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IBatchProducerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IBatchProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return BatchProducerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IBatchProducerGrain")]
        internal class BatchProducerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IBatchProducerGrain
        {
            

            public static IBatchProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IBatchProducerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IBatchProducerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new BatchProducerGrainReference(gr);}, grainRef, 1056993933);
            }
            
            protected internal BatchProducerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal BatchProducerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1056993933;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IBatchProducerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                BatchProducerGrainReference input = ((BatchProducerGrainReference)(original));
                return ((BatchProducerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                BatchProducerGrainReference input = ((BatchProducerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return BatchProducerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return BatchProducerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IBatchProducerGrain.BecomeProducer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(266083571, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IBatchProducerGrain.StartPeriodicBatchProducing(int @batchSize)
            {

                return base.InvokeMethodAsync<object>(-1391159795, new object[] {@batchSize} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IBatchProducerGrain.StopPeriodicBatchProducing()
            {

                return base.InvokeMethodAsync<object>(1830475170, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IBatchProducerGrain.GetNumberProduced()
            {

                return base.InvokeMethodAsync<System.Int32>(-970329735, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IBatchProducerGrain.ClearNumberProduced()
            {

                return base.InvokeMethodAsync<object>(1732143298, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IBatchProducerGrain.Produce(int @batchSize)
            {

                return base.InvokeMethodAsync<object>(62587811, new object[] {@batchSize} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IBatchProducerGrain", 1056993933)]
    internal class BatchProducerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1056993933;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1056993933:  // IBatchProducerGrain
                        switch (methodId)
                        {
                            case 266083571: 
                                return ((IBatchProducerGrain)grain).BecomeProducer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1391159795: 
                                return ((IBatchProducerGrain)grain).StartPeriodicBatchProducing((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1830475170: 
                                return ((IBatchProducerGrain)grain).StopPeriodicBatchProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -970329735: 
                                return ((IBatchProducerGrain)grain).GetNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1732143298: 
                                return ((IBatchProducerGrain)grain).ClearNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 62587811: 
                                return ((IBatchProducerGrain)grain).Produce((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1056993933:  // IBatchProducerGrain
                    switch (methodId)
                    {
                        case 266083571:
                            return "BecomeProducer";
                    case -1391159795:
                            return "StartPeriodicBatchProducing";
                    case 1830475170:
                            return "StopPeriodicBatchProducing";
                    case -970329735:
                            return "GetNumberProduced";
                    case 1732143298:
                            return "ClearNumberProduced";
                    case 62587811:
                            return "Produce";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class CustomEventConsumerGrainFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ICustomEventConsumerGrain<T>> instead.")]
                        public static ICustomEventConsumerGrain<T> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ICustomEventConsumerGrain<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ICustomEventConsumerGrain<T>> instead.")]
                        public static ICustomEventConsumerGrain<T> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ICustomEventConsumerGrain<T>), primaryKey, grainClassNamePrefix));
                        }

            public static ICustomEventConsumerGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return CustomEventConsumerGrainReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.ICustomEventConsumerGrain<T>")]
        internal class CustomEventConsumerGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.ICustomEventConsumerGrain<T>
        
        {
            

            public static ICustomEventConsumerGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ICustomEventConsumerGrain<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ICustomEventConsumerGrain<T>), (global::Orleans.Runtime.GrainReference gr) => { return new CustomEventConsumerGrainReference<T>(gr);}, grainRef, 1173705989);
            }
            
            protected internal CustomEventConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal CustomEventConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1173705989;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.ICustomEventConsumerGrain<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                CustomEventConsumerGrainReference<T> input = ((CustomEventConsumerGrainReference<T>)(original));
                return ((CustomEventConsumerGrainReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                CustomEventConsumerGrainReference<T> input = ((CustomEventConsumerGrainReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return CustomEventConsumerGrainReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1573917447));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return CustomEventConsumerGrainMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventConsumerGrain<T>.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventConsumerGrain<T>.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.ICustomEventConsumerGrain<T>.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, null );
            }
            
            System.Threading.Tasks.Task<T> TestGrainInterfaces.ICustomEventConsumerGrain<T>.GetLastConsumedItem()
            {

                return base.InvokeMethodAsync<T>(-1340838591, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventConsumerGrain<T>.SetMessageExpectation(int @value)
            {

                return base.InvokeMethodAsync<object>(-227040583, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task<System.TimeSpan> TestGrainInterfaces.ICustomEventConsumerGrain<T>.GetConsumingTime()
            {

                return base.InvokeMethodAsync<System.TimeSpan>(2027949885, null );
            }
            
            System.Threading.Tasks.Task<bool> TestGrainInterfaces.ICustomEventConsumerGrain<T>.HasFinishedConsuming()
            {

                return base.InvokeMethodAsync<System.Boolean>(-676321465, null );
            }
            
            System.Threading.Tasks.Task<System.TimeSpan> TestGrainInterfaces.ICustomEventConsumerGrain<T>.GetTotalSendTime()
            {

                return base.InvokeMethodAsync<System.TimeSpan>(-800629621, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.ICustomEventConsumerGrain<T>", 1173705989)]
    internal class CustomEventConsumerGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1173705989;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1173705989:  // ICustomEventConsumerGrain`1
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ICustomEventConsumerGrain<T>)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ICustomEventConsumerGrain<T>)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ICustomEventConsumerGrain<T>)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1340838591: 
                                return ((ICustomEventConsumerGrain<T>)grain).GetLastConsumedItem().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -227040583: 
                                return ((ICustomEventConsumerGrain<T>)grain).SetMessageExpectation((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2027949885: 
                                return ((ICustomEventConsumerGrain<T>)grain).GetConsumingTime().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -676321465: 
                                return ((ICustomEventConsumerGrain<T>)grain).HasFinishedConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -800629621: 
                                return ((ICustomEventConsumerGrain<T>)grain).GetTotalSendTime().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1173705989:  // ICustomEventConsumerGrain`1
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    case -1340838591:
                            return "GetLastConsumedItem";
                    case -227040583:
                            return "SetMessageExpectation";
                    case 2027949885:
                            return "GetConsumingTime";
                    case -676321465:
                            return "HasFinishedConsuming";
                    case -800629621:
                            return "GetTotalSendTime";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class CustomEventProducerGrainFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ICustomEventProducerGrain<T>> instead.")]
                        public static ICustomEventProducerGrain<T> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ICustomEventProducerGrain<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ICustomEventProducerGrain<T>> instead.")]
                        public static ICustomEventProducerGrain<T> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ICustomEventProducerGrain<T>), primaryKey, grainClassNamePrefix));
                        }

            public static ICustomEventProducerGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return CustomEventProducerGrainReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.ICustomEventProducerGrain<T>")]
        internal class CustomEventProducerGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.ICustomEventProducerGrain<T>
        
        {
            

            public static ICustomEventProducerGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ICustomEventProducerGrain<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ICustomEventProducerGrain<T>), (global::Orleans.Runtime.GrainReference gr) => { return new CustomEventProducerGrainReference<T>(gr);}, grainRef, 979969149);
            }
            
            protected internal CustomEventProducerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal CustomEventProducerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 979969149;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.ICustomEventProducerGrain<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                CustomEventProducerGrainReference<T> input = ((CustomEventProducerGrainReference<T>)(original));
                return ((CustomEventProducerGrainReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                CustomEventProducerGrainReference<T> input = ((CustomEventProducerGrainReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return CustomEventProducerGrainReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -589552067));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return CustomEventProducerGrainMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.BecomeProducer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(266083571, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.StartPeriodicBatchProducing(int @batchSize, T @itemToProduce)
            {

                return base.InvokeMethodAsync<object>(521990652, new object[] {@batchSize, @itemToProduce} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.StartPeriodicBatchProducing(System.Collections.Generic.IEnumerable<T> @values)
            {

                return base.InvokeMethodAsync<object>(659470992, new object[] {@values} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.StopPeriodicBatchProducing()
            {

                return base.InvokeMethodAsync<object>(1830475170, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.ICustomEventProducerGrain<T>.GetNumberProduced()
            {

                return base.InvokeMethodAsync<System.Int32>(-970329735, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.ClearNumberProduced()
            {

                return base.InvokeMethodAsync<object>(1732143298, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.Produce(int @batchSize, T @valueToProduce)
            {

                return base.InvokeMethodAsync<object>(-1093083721, new object[] {@batchSize, @valueToProduce} );
            }
            
            System.Threading.Tasks.Task<T> TestGrainInterfaces.ICustomEventProducerGrain<T>.GetLastProducedItem()
            {

                return base.InvokeMethodAsync<T>(-803071648, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.ICustomEventProducerGrain<T>.Produce(System.Collections.Generic.IEnumerable<T> @values)
            {

                return base.InvokeMethodAsync<object>(-1810604778, new object[] {@values} );
            }
            
            System.Threading.Tasks.Task<System.TimeSpan> TestGrainInterfaces.ICustomEventProducerGrain<T>.GetTotalProducedTime()
            {

                return base.InvokeMethodAsync<System.TimeSpan>(-948111643, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.ICustomEventProducerGrain<T>", 979969149)]
    internal class CustomEventProducerGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 979969149;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 979969149:  // ICustomEventProducerGrain`1
                        switch (methodId)
                        {
                            case 266083571: 
                                return ((ICustomEventProducerGrain<T>)grain).BecomeProducer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 521990652: 
                                return ((ICustomEventProducerGrain<T>)grain).StartPeriodicBatchProducing((Int32)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 659470992: 
                                return ((ICustomEventProducerGrain<T>)grain).StartPeriodicBatchProducing((System.Collections.Generic.IEnumerable<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1830475170: 
                                return ((ICustomEventProducerGrain<T>)grain).StopPeriodicBatchProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -970329735: 
                                return ((ICustomEventProducerGrain<T>)grain).GetNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1732143298: 
                                return ((ICustomEventProducerGrain<T>)grain).ClearNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1093083721: 
                                return ((ICustomEventProducerGrain<T>)grain).Produce((Int32)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -803071648: 
                                return ((ICustomEventProducerGrain<T>)grain).GetLastProducedItem().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1810604778: 
                                return ((ICustomEventProducerGrain<T>)grain).Produce((System.Collections.Generic.IEnumerable<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -948111643: 
                                return ((ICustomEventProducerGrain<T>)grain).GetTotalProducedTime().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 979969149:  // ICustomEventProducerGrain`1
                    switch (methodId)
                    {
                        case 266083571:
                            return "BecomeProducer";
                    case 521990652:
                            return "StartPeriodicBatchProducing";
                    case 659470992:
                            return "StartPeriodicBatchProducing";
                    case 1830475170:
                            return "StopPeriodicBatchProducing";
                    case -970329735:
                            return "GetNumberProduced";
                    case 1732143298:
                            return "ClearNumberProduced";
                    case -1093083721:
                            return "Produce";
                    case -803071648:
                            return "GetLastProducedItem";
                    case -1810604778:
                            return "Produce";
                    case -948111643:
                            return "GetTotalProducedTime";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MultipleProducingProducerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMultipleProducingProducerGrain> instead.")]
                        public static IMultipleProducingProducerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMultipleProducingProducerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMultipleProducingProducerGrain> instead.")]
                        public static IMultipleProducingProducerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMultipleProducingProducerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IMultipleProducingProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MultipleProducingProducerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IMultipleProducingProducerGrain")]
        internal class MultipleProducingProducerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IMultipleProducingProducerGrain
        {
            

            public static IMultipleProducingProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMultipleProducingProducerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMultipleProducingProducerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MultipleProducingProducerGrainReference(gr);}, grainRef, 271298961);
            }
            
            protected internal MultipleProducingProducerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MultipleProducingProducerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 271298961;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IMultipleProducingProducerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MultipleProducingProducerGrainReference input = ((MultipleProducingProducerGrainReference)(original));
                return ((MultipleProducingProducerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MultipleProducingProducerGrainReference input = ((MultipleProducingProducerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MultipleProducingProducerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MultipleProducingProducerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.IStreamIdentity> TestGrainInterfaces.IMultipleProducingProducerGrain.BecomeProducer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<Orleans.Streams.IStreamIdentity>(266083571, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleProducingProducerGrain.StartPeriodicProducing(Orleans.Streams.IStreamIdentity @identity)
            {

                return base.InvokeMethodAsync<object>(1365048832, new object[] {@identity} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleProducingProducerGrain.StopPeriodicProducing(Orleans.Streams.IStreamIdentity @identity)
            {

                return base.InvokeMethodAsync<object>(-282951924, new object[] {@identity} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Orleans.Streams.IStreamIdentity, int>> TestGrainInterfaces.IMultipleProducingProducerGrain.GetNumberProduced()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<Orleans.Streams.IStreamIdentity,System.Int32>>(-970329735, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleProducingProducerGrain.ClearNumberProduced()
            {

                return base.InvokeMethodAsync<object>(1732143298, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleProducingProducerGrain.Produce(Orleans.Streams.IStreamIdentity @identifier)
            {

                return base.InvokeMethodAsync<object>(-871495156, new object[] {@identifier} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IMultipleProducingProducerGrain", 271298961)]
    internal class MultipleProducingProducerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 271298961;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 271298961:  // IMultipleProducingProducerGrain
                        switch (methodId)
                        {
                            case 266083571: 
                                return ((IMultipleProducingProducerGrain)grain).BecomeProducer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1365048832: 
                                return ((IMultipleProducingProducerGrain)grain).StartPeriodicProducing((Orleans.Streams.IStreamIdentity)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -282951924: 
                                return ((IMultipleProducingProducerGrain)grain).StopPeriodicProducing((Orleans.Streams.IStreamIdentity)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -970329735: 
                                return ((IMultipleProducingProducerGrain)grain).GetNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1732143298: 
                                return ((IMultipleProducingProducerGrain)grain).ClearNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -871495156: 
                                return ((IMultipleProducingProducerGrain)grain).Produce((Orleans.Streams.IStreamIdentity)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 271298961:  // IMultipleProducingProducerGrain
                    switch (methodId)
                    {
                        case 266083571:
                            return "BecomeProducer";
                    case 1365048832:
                            return "StartPeriodicProducing";
                    case -282951924:
                            return "StopPeriodicProducing";
                    case -970329735:
                            return "GetNumberProduced";
                    case 1732143298:
                            return "ClearNumberProduced";
                    case -871495156:
                            return "Produce";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DoSomethingWithMoreGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingWithMoreGrain> instead.")]
                        public static IDoSomethingWithMoreGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingWithMoreGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingWithMoreGrain> instead.")]
                        public static IDoSomethingWithMoreGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingWithMoreGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IDoSomethingWithMoreGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DoSomethingWithMoreGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IDoSomethingWithMoreGrain")]
        internal class DoSomethingWithMoreGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IDoSomethingWithMoreGrain
        {
            

            public static IDoSomethingWithMoreGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDoSomethingWithMoreGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDoSomethingWithMoreGrain), (global::Orleans.Runtime.GrainReference gr) => { return new DoSomethingWithMoreGrainReference(gr);}, grainRef, 1194674781);
            }
            
            protected internal DoSomethingWithMoreGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DoSomethingWithMoreGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1194674781;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IDoSomethingWithMoreGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DoSomethingWithMoreGrainReference input = ((DoSomethingWithMoreGrainReference)(original));
                return ((DoSomethingWithMoreGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DoSomethingWithMoreGrainReference input = ((DoSomethingWithMoreGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DoSomethingWithMoreGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DoSomethingWithMoreGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomethingWithMoreGrain.DoThat()
            {

                return base.InvokeMethodAsync<System.String>(-1313450312, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingWithMoreGrain.SetB(int @a)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingWithMoreGrain.IncrementB()
            {

                return base.InvokeMethodAsync<object>(-1953666708, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomethingWithMoreGrain.GetB()
            {

                return base.InvokeMethodAsync<System.Int32>(-375877609, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomething.DoIt()
            {

                return base.InvokeMethodAsync<System.String>(-2085989032, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomething.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IDoSomethingWithMoreGrain", 1194674781)]
    internal class DoSomethingWithMoreGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1194674781;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1194674781:  // IDoSomethingWithMoreGrain
                        switch (methodId)
                        {
                            case -1313450312: 
                                return ((IDoSomethingWithMoreGrain)grain).DoThat().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 638886962: 
                                return ((IDoSomethingWithMoreGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1953666708: 
                                return ((IDoSomethingWithMoreGrain)grain).IncrementB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -375877609: 
                                return ((IDoSomethingWithMoreGrain)grain).GetB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingWithMoreGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingWithMoreGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingWithMoreGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingWithMoreGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1194674781:  // IDoSomethingWithMoreGrain
                    switch (methodId)
                    {
                        case -1313450312:
                            return "DoThat";
                    case 638886962:
                            return "SetB";
                    case -1953666708:
                            return "IncrementB";
                    case -375877609:
                            return "GetB";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DoSomethingEmptyGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingEmptyGrain> instead.")]
                        public static IDoSomethingEmptyGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingEmptyGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingEmptyGrain> instead.")]
                        public static IDoSomethingEmptyGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingEmptyGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IDoSomethingEmptyGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DoSomethingEmptyGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IDoSomethingEmptyGrain")]
        internal class DoSomethingEmptyGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IDoSomethingEmptyGrain
        {
            

            public static IDoSomethingEmptyGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDoSomethingEmptyGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDoSomethingEmptyGrain), (global::Orleans.Runtime.GrainReference gr) => { return new DoSomethingEmptyGrainReference(gr);}, grainRef, -391075291);
            }
            
            protected internal DoSomethingEmptyGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DoSomethingEmptyGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -391075291;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IDoSomethingEmptyGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DoSomethingEmptyGrainReference input = ((DoSomethingEmptyGrainReference)(original));
                return ((DoSomethingEmptyGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DoSomethingEmptyGrainReference input = ((DoSomethingEmptyGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DoSomethingEmptyGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DoSomethingEmptyGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomething.DoIt()
            {

                return base.InvokeMethodAsync<System.String>(-2085989032, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomething.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IDoSomethingEmptyGrain", -391075291)]
    internal class DoSomethingEmptyGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -391075291;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -391075291:  // IDoSomethingEmptyGrain
                        switch (methodId)
                        {
                            case -2085989032: 
                                return ((IDoSomethingEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -391075291:  // IDoSomethingEmptyGrain
                    switch (methodId)
                    {
                        case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DoSomethingEmptyWithMoreGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingEmptyWithMoreGrain> instead.")]
                        public static IDoSomethingEmptyWithMoreGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingEmptyWithMoreGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingEmptyWithMoreGrain> instead.")]
                        public static IDoSomethingEmptyWithMoreGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingEmptyWithMoreGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IDoSomethingEmptyWithMoreGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DoSomethingEmptyWithMoreGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain")]
        internal class DoSomethingEmptyWithMoreGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain
        {
            

            public static IDoSomethingEmptyWithMoreGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDoSomethingEmptyWithMoreGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDoSomethingEmptyWithMoreGrain), (global::Orleans.Runtime.GrainReference gr) => { return new DoSomethingEmptyWithMoreGrainReference(gr);}, grainRef, 962951394);
            }
            
            protected internal DoSomethingEmptyWithMoreGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DoSomethingEmptyWithMoreGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 962951394;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DoSomethingEmptyWithMoreGrainReference input = ((DoSomethingEmptyWithMoreGrainReference)(original));
                return ((DoSomethingEmptyWithMoreGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DoSomethingEmptyWithMoreGrainReference input = ((DoSomethingEmptyWithMoreGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DoSomethingEmptyWithMoreGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -391075291));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DoSomethingEmptyWithMoreGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain.DoMore()
            {

                return base.InvokeMethodAsync<System.String>(-881238934, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomething.DoIt()
            {

                return base.InvokeMethodAsync<System.String>(-2085989032, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomething.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain", 962951394)]
    internal class DoSomethingEmptyWithMoreGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 962951394;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 962951394:  // IDoSomethingEmptyWithMoreGrain
                        switch (methodId)
                        {
                            case -881238934: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -391075291:  // IDoSomethingEmptyGrain
                        switch (methodId)
                        {
                            case -2085989032: 
                                return ((IDoSomethingEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 962951394:  // IDoSomethingEmptyWithMoreGrain
                    switch (methodId)
                    {
                        case -881238934:
                            return "DoMore";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -391075291:  // IDoSomethingEmptyGrain
                    switch (methodId)
                    {
                        case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DoSomethingWithMoreEmptyGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingWithMoreEmptyGrain> instead.")]
                        public static IDoSomethingWithMoreEmptyGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingWithMoreEmptyGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingWithMoreEmptyGrain> instead.")]
                        public static IDoSomethingWithMoreEmptyGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingWithMoreEmptyGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IDoSomethingWithMoreEmptyGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DoSomethingWithMoreEmptyGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IDoSomethingWithMoreEmptyGrain")]
        internal class DoSomethingWithMoreEmptyGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IDoSomethingWithMoreEmptyGrain
        {
            

            public static IDoSomethingWithMoreEmptyGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDoSomethingWithMoreEmptyGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDoSomethingWithMoreEmptyGrain), (global::Orleans.Runtime.GrainReference gr) => { return new DoSomethingWithMoreEmptyGrainReference(gr);}, grainRef, 2141373979);
            }
            
            protected internal DoSomethingWithMoreEmptyGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DoSomethingWithMoreEmptyGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2141373979;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IDoSomethingWithMoreEmptyGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DoSomethingWithMoreEmptyGrainReference input = ((DoSomethingWithMoreEmptyGrainReference)(original));
                return ((DoSomethingWithMoreEmptyGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DoSomethingWithMoreEmptyGrainReference input = ((DoSomethingWithMoreEmptyGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DoSomethingWithMoreEmptyGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == 962951394)) 
                            || (interfaceId == -391075291));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DoSomethingWithMoreEmptyGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain.DoMore()
            {

                return base.InvokeMethodAsync<System.String>(-881238934, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomething.DoIt()
            {

                return base.InvokeMethodAsync<System.String>(-2085989032, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomething.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IDoSomethingWithMoreEmptyGrain", 2141373979)]
    internal class DoSomethingWithMoreEmptyGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2141373979;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2141373979:  // IDoSomethingWithMoreEmptyGrain
                        switch (methodId)
                        {
                            case -881238934: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 962951394:  // IDoSomethingEmptyWithMoreGrain
                        switch (methodId)
                        {
                            case -881238934: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -391075291:  // IDoSomethingEmptyGrain
                        switch (methodId)
                        {
                            case -2085989032: 
                                return ((IDoSomethingEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2141373979:  // IDoSomethingWithMoreEmptyGrain
                    switch (methodId)
                    {
                        case -881238934:
                            return "DoMore";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 962951394:  // IDoSomethingEmptyWithMoreGrain
                    switch (methodId)
                    {
                        case -881238934:
                            return "DoMore";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -391075291:  // IDoSomethingEmptyGrain
                    switch (methodId)
                    {
                        case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DoSomethingCombinedGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingCombinedGrain> instead.")]
                        public static IDoSomethingCombinedGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingCombinedGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDoSomethingCombinedGrain> instead.")]
                        public static IDoSomethingCombinedGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDoSomethingCombinedGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IDoSomethingCombinedGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DoSomethingCombinedGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.IDoSomethingCombinedGrain")]
        internal class DoSomethingCombinedGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IDoSomethingCombinedGrain
        {
            

            public static IDoSomethingCombinedGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDoSomethingCombinedGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDoSomethingCombinedGrain), (global::Orleans.Runtime.GrainReference gr) => { return new DoSomethingCombinedGrainReference(gr);}, grainRef, -514373012);
            }
            
            protected internal DoSomethingCombinedGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DoSomethingCombinedGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -514373012;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.IDoSomethingCombinedGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DoSomethingCombinedGrainReference input = ((DoSomethingCombinedGrainReference)(original));
                return ((DoSomethingCombinedGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DoSomethingCombinedGrainReference input = ((DoSomethingCombinedGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DoSomethingCombinedGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1194674781)) 
                            || (interfaceId == 2141373979)) 
                            || (interfaceId == 962951394)) 
                            || (interfaceId == -391075291));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DoSomethingCombinedGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingCombinedGrain.SetC(int @a)
            {

                return base.InvokeMethodAsync<object>(-1229111471, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingCombinedGrain.IncrementC()
            {

                return base.InvokeMethodAsync<object>(-2019798947, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomethingCombinedGrain.GetC()
            {

                return base.InvokeMethodAsync<System.Int32>(-186959875, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomethingWithMoreGrain.DoThat()
            {

                return base.InvokeMethodAsync<System.String>(-1313450312, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingWithMoreGrain.SetB(int @a)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomethingWithMoreGrain.IncrementB()
            {

                return base.InvokeMethodAsync<object>(-1953666708, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomethingWithMoreGrain.GetB()
            {

                return base.InvokeMethodAsync<System.Int32>(-375877609, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomething.DoIt()
            {

                return base.InvokeMethodAsync<System.String>(-2085989032, null );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IDoSomething.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> TestGrainInterfaces.IDoSomething.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
            
            System.Threading.Tasks.Task<string> TestGrainInterfaces.IDoSomethingEmptyWithMoreGrain.DoMore()
            {

                return base.InvokeMethodAsync<System.String>(-881238934, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.IDoSomethingCombinedGrain", -514373012)]
    internal class DoSomethingCombinedGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -514373012;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -514373012:  // IDoSomethingCombinedGrain
                        switch (methodId)
                        {
                            case -1229111471: 
                                return ((IDoSomethingCombinedGrain)grain).SetC((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2019798947: 
                                return ((IDoSomethingCombinedGrain)grain).IncrementC().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -186959875: 
                                return ((IDoSomethingCombinedGrain)grain).GetC().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1313450312: 
                                return ((IDoSomethingCombinedGrain)grain).DoThat().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 638886962: 
                                return ((IDoSomethingCombinedGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1953666708: 
                                return ((IDoSomethingCombinedGrain)grain).IncrementB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -375877609: 
                                return ((IDoSomethingCombinedGrain)grain).GetB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingCombinedGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingCombinedGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingCombinedGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingCombinedGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -881238934: 
                                return ((IDoSomethingCombinedGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1194674781:  // IDoSomethingWithMoreGrain
                        switch (methodId)
                        {
                            case -1313450312: 
                                return ((IDoSomethingWithMoreGrain)grain).DoThat().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 638886962: 
                                return ((IDoSomethingWithMoreGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1953666708: 
                                return ((IDoSomethingWithMoreGrain)grain).IncrementB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -375877609: 
                                return ((IDoSomethingWithMoreGrain)grain).GetB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingWithMoreGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingWithMoreGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingWithMoreGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingWithMoreGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 2141373979:  // IDoSomethingWithMoreEmptyGrain
                        switch (methodId)
                        {
                            case -881238934: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingWithMoreEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 962951394:  // IDoSomethingEmptyWithMoreGrain
                        switch (methodId)
                        {
                            case -881238934: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoMore().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2085989032: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyWithMoreGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -391075291:  // IDoSomethingEmptyGrain
                        switch (methodId)
                        {
                            case -2085989032: 
                                return ((IDoSomethingEmptyGrain)grain).DoIt().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((IDoSomethingEmptyGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((IDoSomethingEmptyGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -411561932: 
                                return ((IDoSomethingEmptyGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -514373012:  // IDoSomethingCombinedGrain
                    switch (methodId)
                    {
                        case -1229111471:
                            return "SetC";
                    case -2019798947:
                            return "IncrementC";
                    case -186959875:
                            return "GetC";
                    case -1313450312:
                            return "DoThat";
                    case 638886962:
                            return "SetB";
                    case -1953666708:
                            return "IncrementB";
                    case -375877609:
                            return "GetB";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    case -881238934:
                            return "DoMore";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1194674781:  // IDoSomethingWithMoreGrain
                    switch (methodId)
                    {
                        case -1313450312:
                            return "DoThat";
                    case 638886962:
                            return "SetB";
                    case -1953666708:
                            return "IncrementB";
                    case -375877609:
                            return "GetB";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 2141373979:  // IDoSomethingWithMoreEmptyGrain
                    switch (methodId)
                    {
                        case -881238934:
                            return "DoMore";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 962951394:  // IDoSomethingEmptyWithMoreGrain
                    switch (methodId)
                    {
                        case -881238934:
                            return "DoMore";
                    case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -391075291:  // IDoSomethingEmptyGrain
                    switch (methodId)
                    {
                        case -2085989032:
                            return "DoIt";
                    case 2129932222:
                            return "SetA";
                    case 1017190206:
                            return "IncrementA";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace UnitTests.GrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    using System.Collections;
    using Orleans.Streams;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class FaultableConsumerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IFaultableConsumerGrain> instead.")]
                        public static IFaultableConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IFaultableConsumerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IFaultableConsumerGrain> instead.")]
                        public static IFaultableConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IFaultableConsumerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IFaultableConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return FaultableConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IFaultableConsumerGrain")]
        internal class FaultableConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IFaultableConsumerGrain
        {
            

            public static IFaultableConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IFaultableConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IFaultableConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new FaultableConsumerGrainReference(gr);}, grainRef, -1176703236);
            }
            
            protected internal FaultableConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal FaultableConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1176703236;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IFaultableConsumerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                FaultableConsumerGrainReference input = ((FaultableConsumerGrainReference)(original));
                return ((FaultableConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                FaultableConsumerGrainReference input = ((FaultableConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return FaultableConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return FaultableConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IFaultableConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IFaultableConsumerGrain.SetFailPeriod(System.TimeSpan @failPeriod)
            {

                return base.InvokeMethodAsync<object>(1943784544, new object[] {@failPeriod} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IFaultableConsumerGrain.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.IFaultableConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.IFaultableConsumerGrain.GetNumberFailed()
            {

                return base.InvokeMethodAsync<System.Int32>(-1999330239, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.IFaultableConsumerGrain.GetErrorCount()
            {

                return base.InvokeMethodAsync<System.Int32>(805055061, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IFaultableConsumerGrain", -1176703236)]
    internal class FaultableConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1176703236;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1176703236:  // IFaultableConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((IFaultableConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1943784544: 
                                return ((IFaultableConsumerGrain)grain).SetFailPeriod((TimeSpan)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((IFaultableConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((IFaultableConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1999330239: 
                                return ((IFaultableConsumerGrain)grain).GetNumberFailed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 805055061: 
                                return ((IFaultableConsumerGrain)grain).GetErrorCount().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1176703236:  // IFaultableConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1943784544:
                            return "SetFailPeriod";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    case -1999330239:
                            return "GetNumberFailed";
                    case 805055061:
                            return "GetErrorCount";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericGrainFactory<T, U>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrain<T,U>> instead.")]
                        public static IGenericGrain<T,U> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrain<T,U>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrain<T,U>> instead.")]
                        public static IGenericGrain<T,U> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrain<T,U>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericGrain<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericGrainReference<T,U>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericGrain<T,U>")]
        internal class GenericGrainReference<T, U> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericGrain<T, U>
        
        
        {
            

            public static IGenericGrain<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericGrain<T,U>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericGrain<T,U>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericGrainReference<T,U>(gr);}, grainRef, 1634994201);
            }
            
            protected internal GenericGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1634994201;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericGrain<T,U>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericGrainReference<T,U> input = ((GenericGrainReference<T,U>)(original));
                return ((GenericGrainReference<T,U>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericGrainReference<T,U> input = ((GenericGrainReference<T,U>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericGrainReference<T,U>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 199374749));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericGrainMethodInvoker<T,U>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericGrain<T,U>.SetT(T @a)
            {

                return base.InvokeMethodAsync<object>(615178881, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task<U> UnitTests.GrainInterfaces.IGenericGrain<T,U>.MapT2U()
            {

                return base.InvokeMethodAsync<U>(-1220533591, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericGrain<T,U>", 1634994201)]
    internal class GenericGrainMethodInvoker<T, U> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1634994201;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1634994201:  // IGenericGrain`2
                        switch (methodId)
                        {
                            case 615178881: 
                                return ((IGenericGrain<T,U>)grain).SetT((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1220533591: 
                                return ((IGenericGrain<T,U>)grain).MapT2U().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1634994201:  // IGenericGrain`2
                    switch (methodId)
                    {
                        case 615178881:
                            return "SetT";
                    case -1220533591:
                            return "MapT2U";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGenericGrain1Factory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain1<T>> instead.")]
                        public static ISimpleGenericGrain1<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain1<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain1<T>> instead.")]
                        public static ISimpleGenericGrain1<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain1<T>), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleGenericGrain1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGenericGrain1Reference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>")]
        internal class SimpleGenericGrain1Reference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>
        
        {
            

            public static ISimpleGenericGrain1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGenericGrain1<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGenericGrain1<T>), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGenericGrain1Reference<T>(gr);}, grainRef, 1260283565);
            }
            
            protected internal SimpleGenericGrain1Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGenericGrain1Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1260283565;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGenericGrain1Reference<T> input = ((SimpleGenericGrain1Reference<T>)(original));
                return ((SimpleGenericGrain1Reference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGenericGrain1Reference<T> input = ((SimpleGenericGrain1Reference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGenericGrain1Reference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -140326326));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGenericGrain1MethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>.GetA()
            {

                return base.InvokeMethodAsync<T>(-411561932, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>.GetAxB()
            {

                return base.InvokeMethodAsync<System.String>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>.GetAxB(T @a, T @b)
            {

                return base.InvokeMethodAsync<System.String>(923307441, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>.SetA(T @a)
            {

                return base.InvokeMethodAsync<object>(-365341286, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>.SetB(T @b)
            {

                return base.InvokeMethodAsync<object>(-1084120049, new object[] {@b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain1<T>", 1260283565)]
    internal class SimpleGenericGrain1MethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1260283565;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1260283565:  // ISimpleGenericGrain1`1
                        switch (methodId)
                        {
                            case -411561932: 
                                return ((ISimpleGenericGrain1<T>)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1039727631: 
                                return ((ISimpleGenericGrain1<T>)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 923307441: 
                                return ((ISimpleGenericGrain1<T>)grain).GetAxB((T)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -365341286: 
                                return ((ISimpleGenericGrain1<T>)grain).SetA((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1084120049: 
                                return ((ISimpleGenericGrain1<T>)grain).SetB((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1260283565:  // ISimpleGenericGrain1`1
                    switch (methodId)
                    {
                        case -411561932:
                            return "GetA";
                    case 1039727631:
                            return "GetAxB";
                    case 923307441:
                            return "GetAxB";
                    case -365341286:
                            return "SetA";
                    case -1084120049:
                            return "SetB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGenericGrainUFactory<U>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrainU<U>> instead.")]
                        public static ISimpleGenericGrainU<U> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrainU<U>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrainU<U>> instead.")]
                        public static ISimpleGenericGrainU<U> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrainU<U>), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleGenericGrainU<U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGenericGrainUReference<U>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>")]
        internal class SimpleGenericGrainUReference<U> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>
        
        {
            

            public static ISimpleGenericGrainU<U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGenericGrainU<U>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGenericGrainU<U>), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGenericGrainUReference<U>(gr);}, grainRef, -1572190367);
            }
            
            protected internal SimpleGenericGrainUReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGenericGrainUReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1572190367;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGenericGrainUReference<U> input = ((SimpleGenericGrainUReference<U>)(original));
                return ((SimpleGenericGrainUReference<U>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGenericGrainUReference<U> input = ((SimpleGenericGrainUReference<U>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGenericGrainUReference<U>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -841198336));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGenericGrainUMethodInvoker<U>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<U> UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>.GetA()
            {

                return base.InvokeMethodAsync<U>(-411561932, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>.GetAxB()
            {

                return base.InvokeMethodAsync<System.String>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>.GetAxB(U @a, U @b)
            {

                return base.InvokeMethodAsync<System.String>(-331959529, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>.SetA(U @a)
            {

                return base.InvokeMethodAsync<object>(1405013802, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>.SetB(U @b)
            {

                return base.InvokeMethodAsync<object>(1046971231, new object[] {@b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrainU<U>", -1572190367)]
    internal class SimpleGenericGrainUMethodInvoker<U> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1572190367;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1572190367:  // ISimpleGenericGrainU`1
                        switch (methodId)
                        {
                            case -411561932: 
                                return ((ISimpleGenericGrainU<U>)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1039727631: 
                                return ((ISimpleGenericGrainU<U>)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -331959529: 
                                return ((ISimpleGenericGrainU<U>)grain).GetAxB((U)arguments[0], (U)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1405013802: 
                                return ((ISimpleGenericGrainU<U>)grain).SetA((U)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1046971231: 
                                return ((ISimpleGenericGrainU<U>)grain).SetB((U)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1572190367:  // ISimpleGenericGrainU`1
                    switch (methodId)
                    {
                        case -411561932:
                            return "GetA";
                    case 1039727631:
                            return "GetAxB";
                    case -331959529:
                            return "GetAxB";
                    case 1405013802:
                            return "SetA";
                    case 1046971231:
                            return "SetB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGenericGrain2Factory<T, U>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain2<T,U>> instead.")]
                        public static ISimpleGenericGrain2<T,U> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain2<T,U>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain2<T,U>> instead.")]
                        public static ISimpleGenericGrain2<T,U> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain2<T,U>), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleGenericGrain2<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGenericGrain2Reference<T,U>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>")]
        internal class SimpleGenericGrain2Reference<T, U> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGenericGrain2<T, U>
        
        
        {
            

            public static ISimpleGenericGrain2<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGenericGrain2<T,U>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGenericGrain2<T,U>), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGenericGrain2Reference<T,U>(gr);}, grainRef, -684597085);
            }
            
            protected internal SimpleGenericGrain2Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGenericGrain2Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -684597085;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGenericGrain2Reference<T,U> input = ((SimpleGenericGrain2Reference<T,U>)(original));
                return ((SimpleGenericGrain2Reference<T,U>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGenericGrain2Reference<T,U> input = ((SimpleGenericGrain2Reference<T,U>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGenericGrain2Reference<T,U>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1571726004));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGenericGrain2MethodInvoker<T,U>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>.GetA()
            {

                return base.InvokeMethodAsync<T>(-411561932, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>.GetAxB()
            {

                return base.InvokeMethodAsync<System.String>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>.GetAxB(T @a, U @b)
            {

                return base.InvokeMethodAsync<System.String>(-337596917, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>.SetA(T @a)
            {

                return base.InvokeMethodAsync<object>(-365341286, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>.SetB(U @b)
            {

                return base.InvokeMethodAsync<object>(1046971231, new object[] {@b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain2<T,U>", -684597085)]
    internal class SimpleGenericGrain2MethodInvoker<T, U> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -684597085;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -684597085:  // ISimpleGenericGrain2`2
                        switch (methodId)
                        {
                            case -411561932: 
                                return ((ISimpleGenericGrain2<T,U>)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1039727631: 
                                return ((ISimpleGenericGrain2<T,U>)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -337596917: 
                                return ((ISimpleGenericGrain2<T,U>)grain).GetAxB((T)arguments[0], (U)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -365341286: 
                                return ((ISimpleGenericGrain2<T,U>)grain).SetA((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1046971231: 
                                return ((ISimpleGenericGrain2<T,U>)grain).SetB((U)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -684597085:  // ISimpleGenericGrain2`2
                    switch (methodId)
                    {
                        case -411561932:
                            return "GetA";
                    case 1039727631:
                            return "GetAxB";
                    case -337596917:
                            return "GetAxB";
                    case -365341286:
                            return "SetA";
                    case 1046971231:
                            return "SetB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericGrainWithNoPropertiesFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrainWithNoProperties<T>> instead.")]
                        public static IGenericGrainWithNoProperties<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrainWithNoProperties<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrainWithNoProperties<T>> instead.")]
                        public static IGenericGrainWithNoProperties<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrainWithNoProperties<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericGrainWithNoProperties<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericGrainWithNoPropertiesReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericGrainWithNoProperties<T>")]
        internal class GenericGrainWithNoPropertiesReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericGrainWithNoProperties<T>
        
        {
            

            public static IGenericGrainWithNoProperties<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericGrainWithNoProperties<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericGrainWithNoProperties<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericGrainWithNoPropertiesReference<T>(gr);}, grainRef, 1337405522);
            }
            
            protected internal GenericGrainWithNoPropertiesReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericGrainWithNoPropertiesReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1337405522;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericGrainWithNoProperties<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericGrainWithNoPropertiesReference<T> input = ((GenericGrainWithNoPropertiesReference<T>)(original));
                return ((GenericGrainWithNoPropertiesReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericGrainWithNoPropertiesReference<T> input = ((GenericGrainWithNoPropertiesReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericGrainWithNoPropertiesReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1504548740));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericGrainWithNoPropertiesMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.IGenericGrainWithNoProperties<T>.GetAxB(T @a, T @b)
            {

                return base.InvokeMethodAsync<System.String>(923307441, new object[] {@a, @b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericGrainWithNoProperties<T>", 1337405522)]
    internal class GenericGrainWithNoPropertiesMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1337405522;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1337405522:  // IGenericGrainWithNoProperties`1
                        switch (methodId)
                        {
                            case 923307441: 
                                return ((IGenericGrainWithNoProperties<T>)grain).GetAxB((T)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1337405522:  // IGenericGrainWithNoProperties`1
                    switch (methodId)
                    {
                        case 923307441:
                            return "GetAxB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainWithNoPropertiesFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainWithNoProperties> instead.")]
                        public static IGrainWithNoProperties GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainWithNoProperties), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainWithNoProperties> instead.")]
                        public static IGrainWithNoProperties GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainWithNoProperties), primaryKey, grainClassNamePrefix));
                        }

            public static IGrainWithNoProperties Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainWithNoPropertiesReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGrainWithNoProperties")]
        internal class GrainWithNoPropertiesReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGrainWithNoProperties
        {
            

            public static IGrainWithNoProperties Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGrainWithNoProperties) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGrainWithNoProperties), (global::Orleans.Runtime.GrainReference gr) => { return new GrainWithNoPropertiesReference(gr);}, grainRef, -1624077082);
            }
            
            protected internal GrainWithNoPropertiesReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainWithNoPropertiesReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1624077082;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGrainWithNoProperties";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainWithNoPropertiesReference input = ((GrainWithNoPropertiesReference)(original));
                return ((GrainWithNoPropertiesReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainWithNoPropertiesReference input = ((GrainWithNoPropertiesReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainWithNoPropertiesReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainWithNoPropertiesMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.IGrainWithNoProperties.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.String>(598136665, new object[] {@a, @b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGrainWithNoProperties", -1624077082)]
    internal class GrainWithNoPropertiesMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1624077082;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1624077082:  // IGrainWithNoProperties
                        switch (methodId)
                        {
                            case 598136665: 
                                return ((IGrainWithNoProperties)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1624077082:  // IGrainWithNoProperties
                    switch (methodId)
                    {
                        case 598136665:
                            return "GetAxB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainWithListFieldsFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainWithListFields> instead.")]
                        public static IGrainWithListFields GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainWithListFields), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainWithListFields> instead.")]
                        public static IGrainWithListFields GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainWithListFields), primaryKey, grainClassNamePrefix));
                        }

            public static IGrainWithListFields Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainWithListFieldsReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGrainWithListFields")]
        internal class GrainWithListFieldsReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGrainWithListFields
        {
            

            public static IGrainWithListFields Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGrainWithListFields) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGrainWithListFields), (global::Orleans.Runtime.GrainReference gr) => { return new GrainWithListFieldsReference(gr);}, grainRef, -1210669940);
            }
            
            protected internal GrainWithListFieldsReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainWithListFieldsReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1210669940;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGrainWithListFields";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainWithListFieldsReference input = ((GrainWithListFieldsReference)(original));
                return ((GrainWithListFieldsReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainWithListFieldsReference input = ((GrainWithListFieldsReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainWithListFieldsReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainWithListFieldsMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGrainWithListFields.AddItem(string @item)
            {

                return base.InvokeMethodAsync<object>(331933939, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IList<string>> UnitTests.GrainInterfaces.IGrainWithListFields.GetItems()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IList<System.String>>(1745404428, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGrainWithListFields", -1210669940)]
    internal class GrainWithListFieldsMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1210669940;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1210669940:  // IGrainWithListFields
                        switch (methodId)
                        {
                            case 331933939: 
                                return ((IGrainWithListFields)grain).AddItem((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1745404428: 
                                return ((IGrainWithListFields)grain).GetItems().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1210669940:  // IGrainWithListFields
                    switch (methodId)
                    {
                        case 331933939:
                            return "AddItem";
                    case 1745404428:
                            return "GetItems";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericGrainWithListFieldsFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrainWithListFields<T>> instead.")]
                        public static IGenericGrainWithListFields<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrainWithListFields<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericGrainWithListFields<T>> instead.")]
                        public static IGenericGrainWithListFields<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericGrainWithListFields<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericGrainWithListFields<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericGrainWithListFieldsReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>")]
        internal class GenericGrainWithListFieldsReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>
        
        {
            

            public static IGenericGrainWithListFields<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericGrainWithListFields<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericGrainWithListFields<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericGrainWithListFieldsReference<T>(gr);}, grainRef, -316450890);
            }
            
            protected internal GenericGrainWithListFieldsReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericGrainWithListFieldsReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -316450890;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericGrainWithListFieldsReference<T> input = ((GenericGrainWithListFieldsReference<T>)(original));
                return ((GenericGrainWithListFieldsReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericGrainWithListFieldsReference<T> input = ((GenericGrainWithListFieldsReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericGrainWithListFieldsReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1699945270));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericGrainWithListFieldsMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>.AddItem(T @item)
            {

                return base.InvokeMethodAsync<object>(841516755, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IList<T>> UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>.GetItems()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IList<T>>(1745404428, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericGrainWithListFields<T>", -316450890)]
    internal class GenericGrainWithListFieldsMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -316450890;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -316450890:  // IGenericGrainWithListFields`1
                        switch (methodId)
                        {
                            case 841516755: 
                                return ((IGenericGrainWithListFields<T>)grain).AddItem((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1745404428: 
                                return ((IGenericGrainWithListFields<T>)grain).GetItems().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -316450890:  // IGenericGrainWithListFields`1
                    switch (methodId)
                    {
                        case 841516755:
                            return "AddItem";
                    case 1745404428:
                            return "GetItems";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReader1Factory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader1<T>> instead.")]
                        public static IGenericReader1<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader1<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader1<T>> instead.")]
                        public static IGenericReader1<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader1<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReader1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReader1Reference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReader1<T>")]
        internal class GenericReader1Reference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReader1<T>
        
        {
            

            public static IGenericReader1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReader1<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReader1<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReader1Reference<T>(gr);}, grainRef, 767537344);
            }
            
            protected internal GenericReader1Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReader1Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 767537344;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReader1<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReader1Reference<T> input = ((GenericReader1Reference<T>)(original));
                return ((GenericReader1Reference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReader1Reference<T> input = ((GenericReader1Reference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReader1Reference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1863418523));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReader1MethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericReader1<T>.GetValue()
            {

                return base.InvokeMethodAsync<T>(637921746, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReader1<T>", 767537344)]
    internal class GenericReader1MethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 767537344;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 767537344:  // IGenericReader1`1
                        switch (methodId)
                        {
                            case 637921746: 
                                return ((IGenericReader1<T>)grain).GetValue().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 767537344:  // IGenericReader1`1
                    switch (methodId)
                    {
                        case 637921746:
                            return "GetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericWriter1Factory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter1<T>> instead.")]
                        public static IGenericWriter1<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter1<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter1<T>> instead.")]
                        public static IGenericWriter1<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter1<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericWriter1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericWriter1Reference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericWriter1<T>")]
        internal class GenericWriter1Reference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericWriter1<T>
        
        {
            

            public static IGenericWriter1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericWriter1<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericWriter1<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericWriter1Reference<T>(gr);}, grainRef, -134445539);
            }
            
            protected internal GenericWriter1Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericWriter1Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -134445539;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericWriter1<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericWriter1Reference<T> input = ((GenericWriter1Reference<T>)(original));
                return ((GenericWriter1Reference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericWriter1Reference<T> input = ((GenericWriter1Reference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericWriter1Reference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1121461439));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericWriter1MethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter1<T>.SetValue(T @value)
            {

                return base.InvokeMethodAsync<object>(-1058376616, new object[] {@value} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericWriter1<T>", -134445539)]
    internal class GenericWriter1MethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -134445539;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -134445539:  // IGenericWriter1`1
                        switch (methodId)
                        {
                            case -1058376616: 
                                return ((IGenericWriter1<T>)grain).SetValue((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -134445539:  // IGenericWriter1`1
                    switch (methodId)
                    {
                        case -1058376616:
                            return "SetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReaderWriterGrain1Factory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain1<T>> instead.")]
                        public static IGenericReaderWriterGrain1<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain1<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain1<T>> instead.")]
                        public static IGenericReaderWriterGrain1<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain1<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReaderWriterGrain1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReaderWriterGrain1Reference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain1<T>")]
        internal class GenericReaderWriterGrain1Reference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReaderWriterGrain1<T>
        
        {
            

            public static IGenericReaderWriterGrain1<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReaderWriterGrain1<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReaderWriterGrain1<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReaderWriterGrain1Reference<T>(gr);}, grainRef, 1909583157);
            }
            
            protected internal GenericReaderWriterGrain1Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReaderWriterGrain1Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1909583157;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReaderWriterGrain1<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReaderWriterGrain1Reference<T> input = ((GenericReaderWriterGrain1Reference<T>)(original));
                return ((GenericReaderWriterGrain1Reference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReaderWriterGrain1Reference<T> input = ((GenericReaderWriterGrain1Reference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReaderWriterGrain1Reference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1290826449)) 
                            || (interfaceId == 1121461439)) 
                            || (interfaceId == 1863418523));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReaderWriterGrain1MethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter1<T>.SetValue(T @value)
            {

                return base.InvokeMethodAsync<object>(-1058376616, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericReader1<T>.GetValue()
            {

                return base.InvokeMethodAsync<T>(637921746, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain1<T>", 1909583157)]
    internal class GenericReaderWriterGrain1MethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1909583157;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1909583157:  // IGenericReaderWriterGrain1`1
                        switch (methodId)
                        {
                            case -1058376616: 
                                return ((IGenericReaderWriterGrain1<T>)grain).SetValue((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 637921746: 
                                return ((IGenericReaderWriterGrain1<T>)grain).GetValue().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -134445539:  // IGenericWriter1`1
                        switch (methodId)
                        {
                            case -1058376616: 
                                return ((IGenericWriter1<T>)grain).SetValue((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 767537344:  // IGenericReader1`1
                        switch (methodId)
                        {
                            case 637921746: 
                                return ((IGenericReader1<T>)grain).GetValue().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1909583157:  // IGenericReaderWriterGrain1`1
                    switch (methodId)
                    {
                        case -1058376616:
                            return "SetValue";
                    case 637921746:
                            return "GetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -134445539:  // IGenericWriter1`1
                    switch (methodId)
                    {
                        case -1058376616:
                            return "SetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 767537344:  // IGenericReader1`1
                    switch (methodId)
                    {
                        case 637921746:
                            return "GetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReader2Factory<TOne, TTwo>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader2<TOne,TTwo>> instead.")]
                        public static IGenericReader2<TOne,TTwo> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader2<TOne,TTwo>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader2<TOne,TTwo>> instead.")]
                        public static IGenericReader2<TOne,TTwo> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader2<TOne,TTwo>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReader2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReader2Reference<TOne,TTwo>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>")]
        internal class GenericReader2Reference<TOne, TTwo> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReader2<TOne, TTwo>
        
        
        {
            

            public static IGenericReader2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReader2<TOne,TTwo>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReader2<TOne,TTwo>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReader2Reference<TOne,TTwo>(gr);}, grainRef, 1685381360);
            }
            
            protected internal GenericReader2Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReader2Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1685381360;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReader2Reference<TOne,TTwo> input = ((GenericReader2Reference<TOne,TTwo>)(original));
                return ((GenericReader2Reference<TOne,TTwo>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReader2Reference<TOne,TTwo> input = ((GenericReader2Reference<TOne,TTwo>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReader2Reference<TOne,TTwo>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1983889502));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReader2MethodInvoker<TOne,TTwo>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<TOne> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue1()
            {

                return base.InvokeMethodAsync<TOne>(-557414356, null );
            }
            
            System.Threading.Tasks.Task<TTwo> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue2()
            {

                return base.InvokeMethodAsync<TTwo>(1855368955, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>", 1685381360)]
    internal class GenericReader2MethodInvoker<TOne, TTwo> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1685381360;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1685381360:  // IGenericReader2`2
                        switch (methodId)
                        {
                            case -557414356: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1685381360:  // IGenericReader2`2
                    switch (methodId)
                    {
                        case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericWriter2Factory<TOne, TTwo>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter2<TOne,TTwo>> instead.")]
                        public static IGenericWriter2<TOne,TTwo> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter2<TOne,TTwo>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter2<TOne,TTwo>> instead.")]
                        public static IGenericWriter2<TOne,TTwo> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter2<TOne,TTwo>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericWriter2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericWriter2Reference<TOne,TTwo>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>")]
        internal class GenericWriter2Reference<TOne, TTwo> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericWriter2<TOne, TTwo>
        
        
        {
            

            public static IGenericWriter2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericWriter2<TOne,TTwo>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericWriter2<TOne,TTwo>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericWriter2Reference<TOne,TTwo>(gr);}, grainRef, -405042587);
            }
            
            protected internal GenericWriter2Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericWriter2Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -405042587;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericWriter2Reference<TOne,TTwo> input = ((GenericWriter2Reference<TOne,TTwo>)(original));
                return ((GenericWriter2Reference<TOne,TTwo>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericWriter2Reference<TOne,TTwo> input = ((GenericWriter2Reference<TOne,TTwo>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericWriter2Reference<TOne,TTwo>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 131249727));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericWriter2MethodInvoker<TOne,TTwo>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue1(TOne @value)
            {

                return base.InvokeMethodAsync<object>(1200762245, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue2(TTwo @value)
            {

                return base.InvokeMethodAsync<object>(-115270010, new object[] {@value} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>", -405042587)]
    internal class GenericWriter2MethodInvoker<TOne, TTwo> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -405042587;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -405042587:  // IGenericWriter2`2
                        switch (methodId)
                        {
                            case 1200762245: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -405042587:  // IGenericWriter2`2
                    switch (methodId)
                    {
                        case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReaderWriterGrain2Factory<TOne, TTwo>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain2<TOne,TTwo>> instead.")]
                        public static IGenericReaderWriterGrain2<TOne,TTwo> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain2<TOne,TTwo>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain2<TOne,TTwo>> instead.")]
                        public static IGenericReaderWriterGrain2<TOne,TTwo> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain2<TOne,TTwo>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReaderWriterGrain2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReaderWriterGrain2Reference<TOne,TTwo>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain2<TOne,TTwo>")]
        internal class GenericReaderWriterGrain2Reference<TOne, TTwo> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReaderWriterGrain2<TOne, TTwo>
        
        
        {
            

            public static IGenericReaderWriterGrain2<TOne,TTwo> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReaderWriterGrain2<TOne,TTwo>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReaderWriterGrain2<TOne,TTwo>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReaderWriterGrain2Reference<TOne,TTwo>(gr);}, grainRef, 1911654391);
            }
            
            protected internal GenericReaderWriterGrain2Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReaderWriterGrain2Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1911654391;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReaderWriterGrain2<TOne,TTwo>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReaderWriterGrain2Reference<TOne,TTwo> input = ((GenericReaderWriterGrain2Reference<TOne,TTwo>)(original));
                return ((GenericReaderWriterGrain2Reference<TOne,TTwo>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReaderWriterGrain2Reference<TOne,TTwo> input = ((GenericReaderWriterGrain2Reference<TOne,TTwo>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReaderWriterGrain2Reference<TOne,TTwo>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1957933507)) 
                            || (interfaceId == 131249727)) 
                            || (interfaceId == -1983889502));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReaderWriterGrain2MethodInvoker<TOne,TTwo>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue1(TOne @value)
            {

                return base.InvokeMethodAsync<object>(1200762245, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue2(TTwo @value)
            {

                return base.InvokeMethodAsync<object>(-115270010, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task<TOne> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue1()
            {

                return base.InvokeMethodAsync<TOne>(-557414356, null );
            }
            
            System.Threading.Tasks.Task<TTwo> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue2()
            {

                return base.InvokeMethodAsync<TTwo>(1855368955, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain2<TOne,TTwo>", 1911654391)]
    internal class GenericReaderWriterGrain2MethodInvoker<TOne, TTwo> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1911654391;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1911654391:  // IGenericReaderWriterGrain2`2
                        switch (methodId)
                        {
                            case 1200762245: 
                                return ((IGenericReaderWriterGrain2<TOne,TTwo>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericReaderWriterGrain2<TOne,TTwo>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -557414356: 
                                return ((IGenericReaderWriterGrain2<TOne,TTwo>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReaderWriterGrain2<TOne,TTwo>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -405042587:  // IGenericWriter2`2
                        switch (methodId)
                        {
                            case 1200762245: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1685381360:  // IGenericReader2`2
                        switch (methodId)
                        {
                            case -557414356: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1911654391:  // IGenericReaderWriterGrain2`2
                    switch (methodId)
                    {
                        case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -405042587:  // IGenericWriter2`2
                    switch (methodId)
                    {
                        case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1685381360:  // IGenericReader2`2
                    switch (methodId)
                    {
                        case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReader3Factory<TOne, TTwo, TThree>
    
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericReader3<TOne,TTwo,TThree> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader3<TOne,TTwo,TThree>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReader3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericReader3<TOne,TTwo,TThree> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReader3<TOne,TTwo,TThree>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReader3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReader3Reference<TOne,TTwo,TThree>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReader3<TOne,TTwo,TThree>")]
        internal class GenericReader3Reference<TOne, TTwo, TThree> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReader3<TOne, TTwo, TThree>
        
        
        
        {
            

            public static IGenericReader3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReader3<TOne,TTwo,TThree>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReader3<TOne,TTwo,TThree>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReader3Reference<TOne,TTwo,TThree>(gr);}, grainRef, -1357988267);
            }
            
            protected internal GenericReader3Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReader3Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1357988267;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReader3<TOne,TTwo,TThree>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReader3Reference<TOne,TTwo,TThree> input = ((GenericReader3Reference<TOne,TTwo,TThree>)(original));
                return ((GenericReader3Reference<TOne,TTwo,TThree>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReader3Reference<TOne,TTwo,TThree> input = ((GenericReader3Reference<TOne,TTwo,TThree>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReader3Reference<TOne,TTwo,TThree>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1353040013)) 
                            || (interfaceId == -1983889502));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReader3MethodInvoker<TOne,TTwo,TThree>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<TThree> UnitTests.GrainInterfaces.IGenericReader3<TOne,TTwo,TThree>.GetValue3()
            {

                return base.InvokeMethodAsync<TThree>(2034009230, null );
            }
            
            System.Threading.Tasks.Task<TOne> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue1()
            {

                return base.InvokeMethodAsync<TOne>(-557414356, null );
            }
            
            System.Threading.Tasks.Task<TTwo> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue2()
            {

                return base.InvokeMethodAsync<TTwo>(1855368955, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReader3<TOne,TTwo,TThree>", -1357988267)]
    internal class GenericReader3MethodInvoker<TOne, TTwo, TThree> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1357988267;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1357988267:  // IGenericReader3`3
                        switch (methodId)
                        {
                            case 2034009230: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue3().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -557414356: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1685381360:  // IGenericReader2`2
                        switch (methodId)
                        {
                            case -557414356: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1357988267:  // IGenericReader3`3
                    switch (methodId)
                    {
                        case 2034009230:
                            return "GetValue3";
                    case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1685381360:  // IGenericReader2`2
                    switch (methodId)
                    {
                        case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericWriter3Factory<TOne, TTwo, TThree>
    
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericWriter3<TOne,TTwo,TThree> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter3<TOne,TTwo,TThree>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericWriter3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericWriter3<TOne,TTwo,TThree> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericWriter3<TOne,TTwo,TThree>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericWriter3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericWriter3Reference<TOne,TTwo,TThree>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericWriter3<TOne,TTwo,TThree>")]
        internal class GenericWriter3Reference<TOne, TTwo, TThree> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericWriter3<TOne, TTwo, TThree>
        
        
        
        {
            

            public static IGenericWriter3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericWriter3<TOne,TTwo,TThree>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericWriter3<TOne,TTwo,TThree>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericWriter3Reference<TOne,TTwo,TThree>(gr);}, grainRef, 1320810526);
            }
            
            protected internal GenericWriter3Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericWriter3Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1320810526;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericWriter3<TOne,TTwo,TThree>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericWriter3Reference<TOne,TTwo,TThree> input = ((GenericWriter3Reference<TOne,TTwo,TThree>)(original));
                return ((GenericWriter3Reference<TOne,TTwo,TThree>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericWriter3Reference<TOne,TTwo,TThree> input = ((GenericWriter3Reference<TOne,TTwo,TThree>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericWriter3Reference<TOne,TTwo,TThree>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == 518608517)) 
                            || (interfaceId == 131249727));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericWriter3MethodInvoker<TOne,TTwo,TThree>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter3<TOne,TTwo,TThree>.SetValue3(TThree @value)
            {

                return base.InvokeMethodAsync<object>(-1203968909, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue1(TOne @value)
            {

                return base.InvokeMethodAsync<object>(1200762245, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue2(TTwo @value)
            {

                return base.InvokeMethodAsync<object>(-115270010, new object[] {@value} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericWriter3<TOne,TTwo,TThree>", 1320810526)]
    internal class GenericWriter3MethodInvoker<TOne, TTwo, TThree> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1320810526;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1320810526:  // IGenericWriter3`3
                        switch (methodId)
                        {
                            case -1203968909: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue3((TThree)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1200762245: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -405042587:  // IGenericWriter2`2
                        switch (methodId)
                        {
                            case 1200762245: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1320810526:  // IGenericWriter3`3
                    switch (methodId)
                    {
                        case -1203968909:
                            return "SetValue3";
                    case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -405042587:  // IGenericWriter2`2
                    switch (methodId)
                    {
                        case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericReaderWriterGrain3Factory<TOne, TTwo, TThree>
    
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericReaderWriterGrain3<TOne,TTwo,TThree> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain3<TOne,TTwo,TThree>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericReaderWriterGrain3<TOne,TTwo,TThree>> instead.")]
                        public static IGenericReaderWriterGrain3<TOne,TTwo,TThree> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericReaderWriterGrain3<TOne,TTwo,TThree>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericReaderWriterGrain3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain3<TOne,TTwo,TThree>")]
        internal class GenericReaderWriterGrain3Reference<TOne, TTwo, TThree> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericReaderWriterGrain3<TOne, TTwo, TThree>
        
        
        
        {
            

            public static IGenericReaderWriterGrain3<TOne,TTwo,TThree> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericReaderWriterGrain3<TOne,TTwo,TThree>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericReaderWriterGrain3<TOne,TTwo,TThree>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>(gr);}, grainRef, -689214647);
            }
            
            protected internal GenericReaderWriterGrain3Reference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericReaderWriterGrain3Reference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -689214647;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericReaderWriterGrain3<TOne,TTwo,TThree>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericReaderWriterGrain3Reference<TOne,TTwo,TThree> input = ((GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>)(original));
                return ((GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericReaderWriterGrain3Reference<TOne,TTwo,TThree> input = ((GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericReaderWriterGrain3Reference<TOne,TTwo,TThree>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((((((interfaceId == this.InterfaceId) 
                            || (interfaceId == 646122141)) 
                            || (interfaceId == 518608517)) 
                            || (interfaceId == 131249727)) 
                            || (interfaceId == 1353040013)) 
                            || (interfaceId == -1983889502));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericReaderWriterGrain3MethodInvoker<TOne,TTwo,TThree>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter3<TOne,TTwo,TThree>.SetValue3(TThree @value)
            {

                return base.InvokeMethodAsync<object>(-1203968909, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue1(TOne @value)
            {

                return base.InvokeMethodAsync<object>(1200762245, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericWriter2<TOne,TTwo>.SetValue2(TTwo @value)
            {

                return base.InvokeMethodAsync<object>(-115270010, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task<TThree> UnitTests.GrainInterfaces.IGenericReader3<TOne,TTwo,TThree>.GetValue3()
            {

                return base.InvokeMethodAsync<TThree>(2034009230, null );
            }
            
            System.Threading.Tasks.Task<TOne> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue1()
            {

                return base.InvokeMethodAsync<TOne>(-557414356, null );
            }
            
            System.Threading.Tasks.Task<TTwo> UnitTests.GrainInterfaces.IGenericReader2<TOne,TTwo>.GetValue2()
            {

                return base.InvokeMethodAsync<TTwo>(1855368955, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericReaderWriterGrain3<TOne,TTwo,TThree>", -689214647)]
    internal class GenericReaderWriterGrain3MethodInvoker<TOne, TTwo, TThree> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -689214647;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -689214647:  // IGenericReaderWriterGrain3`3
                        switch (methodId)
                        {
                            case -1203968909: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).SetValue3((TThree)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1200762245: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2034009230: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).GetValue3().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -557414356: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReaderWriterGrain3<TOne,TTwo,TThree>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1320810526:  // IGenericWriter3`3
                        switch (methodId)
                        {
                            case -1203968909: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue3((TThree)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1200762245: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter3<TOne,TTwo,TThree>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -405042587:  // IGenericWriter2`2
                        switch (methodId)
                        {
                            case 1200762245: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue1((TOne)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -115270010: 
                                return ((IGenericWriter2<TOne,TTwo>)grain).SetValue2((TTwo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1357988267:  // IGenericReader3`3
                        switch (methodId)
                        {
                            case 2034009230: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue3().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -557414356: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader3<TOne,TTwo,TThree>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1685381360:  // IGenericReader2`2
                        switch (methodId)
                        {
                            case -557414356: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue1().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1855368955: 
                                return ((IGenericReader2<TOne,TTwo>)grain).GetValue2().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -689214647:  // IGenericReaderWriterGrain3`3
                    switch (methodId)
                    {
                        case -1203968909:
                            return "SetValue3";
                    case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    case 2034009230:
                            return "GetValue3";
                    case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1320810526:  // IGenericWriter3`3
                    switch (methodId)
                    {
                        case -1203968909:
                            return "SetValue3";
                    case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -405042587:  // IGenericWriter2`2
                    switch (methodId)
                    {
                        case 1200762245:
                            return "SetValue1";
                    case -115270010:
                            return "SetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1357988267:  // IGenericReader3`3
                    switch (methodId)
                    {
                        case 2034009230:
                            return "GetValue3";
                    case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1685381360:  // IGenericReader2`2
                    switch (methodId)
                    {
                        case -557414356:
                            return "GetValue1";
                    case 1855368955:
                            return "GetValue2";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericSelfManagedGrainFactory<T, U>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericSelfManagedGrain<T,U>> instead.")]
                        public static IGenericSelfManagedGrain<T,U> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericSelfManagedGrain<T,U>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericSelfManagedGrain<T,U>> instead.")]
                        public static IGenericSelfManagedGrain<T,U> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericSelfManagedGrain<T,U>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericSelfManagedGrain<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericSelfManagedGrainReference<T,U>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>")]
        internal class GenericSelfManagedGrainReference<T, U> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T, U>
        
        
        {
            

            public static IGenericSelfManagedGrain<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericSelfManagedGrain<T,U>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericSelfManagedGrain<T,U>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericSelfManagedGrainReference<T,U>(gr);}, grainRef, 1720327813);
            }
            
            protected internal GenericSelfManagedGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericSelfManagedGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1720327813;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericSelfManagedGrainReference<T,U> input = ((GenericSelfManagedGrainReference<T,U>)(original));
                return ((GenericSelfManagedGrainReference<T,U>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericSelfManagedGrainReference<T,U> input = ((GenericSelfManagedGrainReference<T,U>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericSelfManagedGrainReference<T,U>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1828585624));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericSelfManagedGrainMethodInvoker<T,U>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>.GetA()
            {

                return base.InvokeMethodAsync<T>(-411561932, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>.GetAxB()
            {

                return base.InvokeMethodAsync<System.String>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>.GetAxB(T @a, U @b)
            {

                return base.InvokeMethodAsync<System.String>(-337596917, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>.SetA(T @a)
            {

                return base.InvokeMethodAsync<object>(-365341286, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>.SetB(U @b)
            {

                return base.InvokeMethodAsync<object>(1046971231, new object[] {@b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericSelfManagedGrain<T,U>", 1720327813)]
    internal class GenericSelfManagedGrainMethodInvoker<T, U> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1720327813;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1720327813:  // IGenericSelfManagedGrain`2
                        switch (methodId)
                        {
                            case -411561932: 
                                return ((IGenericSelfManagedGrain<T,U>)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1039727631: 
                                return ((IGenericSelfManagedGrain<T,U>)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -337596917: 
                                return ((IGenericSelfManagedGrain<T,U>)grain).GetAxB((T)arguments[0], (U)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -365341286: 
                                return ((IGenericSelfManagedGrain<T,U>)grain).SetA((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1046971231: 
                                return ((IGenericSelfManagedGrain<T,U>)grain).SetB((U)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1720327813:  // IGenericSelfManagedGrain`2
                    switch (methodId)
                    {
                        case -411561932:
                            return "GetA";
                    case 1039727631:
                            return "GetAxB";
                    case -337596917:
                            return "GetAxB";
                    case -365341286:
                            return "SetA";
                    case 1046971231:
                            return "SetB";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class HubGrainFactory<TKey, T1, T2>
    
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IHubGrain<TKey,T1,T2>> instead.")]
                        public static IHubGrain<TKey,T1,T2> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IHubGrain<TKey,T1,T2>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IHubGrain<TKey,T1,T2>> instead.")]
                        public static IHubGrain<TKey,T1,T2> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IHubGrain<TKey,T1,T2>), primaryKey, grainClassNamePrefix));
                        }

            public static IHubGrain<TKey,T1,T2> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return HubGrainReference<TKey,T1,T2>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IHubGrain<TKey,T1,T2>")]
        internal class HubGrainReference<TKey, T1, T2> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IHubGrain<TKey, T1, T2>
        
        
        
        {
            

            public static IHubGrain<TKey,T1,T2> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IHubGrain<TKey,T1,T2>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IHubGrain<TKey,T1,T2>), (global::Orleans.Runtime.GrainReference gr) => { return new HubGrainReference<TKey,T1,T2>(gr);}, grainRef, 300696295);
            }
            
            protected internal HubGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal HubGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 300696295;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IHubGrain<TKey,T1,T2>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                HubGrainReference<TKey,T1,T2> input = ((HubGrainReference<TKey,T1,T2>)(original));
                return ((HubGrainReference<TKey,T1,T2>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                HubGrainReference<TKey,T1,T2> input = ((HubGrainReference<TKey,T1,T2>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return HubGrainReference<TKey,T1,T2>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1181493523));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return HubGrainMethodInvoker<TKey,T1,T2>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IHubGrain<TKey,T1,T2>.Bar(TKey @key, T1 @message1, T2 @message2)
            {

                return base.InvokeMethodAsync<object>(-1974697792, new object[] {@key, @message1, @message2} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IHubGrain<TKey,T1,T2>", 300696295)]
    internal class HubGrainMethodInvoker<TKey, T1, T2> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 300696295;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 300696295:  // IHubGrain`3
                        switch (methodId)
                        {
                            case -1974697792: 
                                return ((IHubGrain<TKey,T1,T2>)grain).Bar((TKey)arguments[0], (T1)arguments[1], (T2)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 300696295:  // IHubGrain`3
                    switch (methodId)
                    {
                        case -1974697792:
                            return "Bar";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class EchoHubGrainFactory<TKey, TMessage>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IEchoHubGrain<TKey,TMessage>> instead.")]
                        public static IEchoHubGrain<TKey,TMessage> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IEchoHubGrain<TKey,TMessage>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IEchoHubGrain<TKey,TMessage>> instead.")]
                        public static IEchoHubGrain<TKey,TMessage> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IEchoHubGrain<TKey,TMessage>), primaryKey, grainClassNamePrefix));
                        }

            public static IEchoHubGrain<TKey,TMessage> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return EchoHubGrainReference<TKey,TMessage>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IEchoHubGrain<TKey,TMessage>")]
        internal class EchoHubGrainReference<TKey, TMessage> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IEchoHubGrain<TKey, TMessage>
        
        
        {
            

            public static IEchoHubGrain<TKey,TMessage> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IEchoHubGrain<TKey,TMessage>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IEchoHubGrain<TKey,TMessage>), (global::Orleans.Runtime.GrainReference gr) => { return new EchoHubGrainReference<TKey,TMessage>(gr);}, grainRef, -1731827949);
            }
            
            protected internal EchoHubGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal EchoHubGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1731827949;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IEchoHubGrain<TKey,TMessage>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                EchoHubGrainReference<TKey,TMessage> input = ((EchoHubGrainReference<TKey,TMessage>)(original));
                return ((EchoHubGrainReference<TKey,TMessage>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                EchoHubGrainReference<TKey,TMessage> input = ((EchoHubGrainReference<TKey,TMessage>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return EchoHubGrainReference<TKey,TMessage>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1571654530)) 
                            || (interfaceId == -1181493523));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return EchoHubGrainMethodInvoker<TKey,TMessage>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IEchoHubGrain<TKey,TMessage>.Foo(TKey @key, TMessage @message, int @x)
            {

                return base.InvokeMethodAsync<object>(-119836414, new object[] {@key, @message, @x} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.IEchoHubGrain<TKey,TMessage>.GetX()
            {

                return base.InvokeMethodAsync<System.Int32>(1208721954, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IHubGrain<TKey,TMessage,TMessage>.Bar(TKey @key, TMessage @message1, TMessage @message2)
            {

                return base.InvokeMethodAsync<object>(147404757, new object[] {@key, @message1, @message2} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IEchoHubGrain<TKey,TMessage>", -1731827949)]
    internal class EchoHubGrainMethodInvoker<TKey, TMessage> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1731827949;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1731827949:  // IEchoHubGrain`2
                        switch (methodId)
                        {
                            case -119836414: 
                                return ((IEchoHubGrain<TKey,TMessage>)grain).Foo((TKey)arguments[0], (TMessage)arguments[1], (Int32)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1208721954: 
                                return ((IEchoHubGrain<TKey,TMessage>)grain).GetX().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 147404757: 
                                return ((IEchoHubGrain<TKey,TMessage>)grain).Bar((TKey)arguments[0], (TMessage)arguments[1], (TMessage)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -592961392:  // IHubGrain`3
                        switch (methodId)
                        {
                            case 147404757: 
                                return ((IHubGrain<TKey,TMessage,TMessage>)grain).Bar((TKey)arguments[0], (TMessage)arguments[1], (TMessage)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1731827949:  // IEchoHubGrain`2
                    switch (methodId)
                    {
                        case -119836414:
                            return "Foo";
                    case 1208721954:
                            return "GetX";
                    case 147404757:
                            return "Bar";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -592961392:  // IHubGrain`3
                    switch (methodId)
                    {
                        case 147404757:
                            return "Bar";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class EchoGenericChainGrainFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IEchoGenericChainGrain<T>> instead.")]
                        public static IEchoGenericChainGrain<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IEchoGenericChainGrain<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IEchoGenericChainGrain<T>> instead.")]
                        public static IEchoGenericChainGrain<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IEchoGenericChainGrain<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IEchoGenericChainGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return EchoGenericChainGrainReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>")]
        internal class EchoGenericChainGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>
        
        {
            

            public static IEchoGenericChainGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IEchoGenericChainGrain<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IEchoGenericChainGrain<T>), (global::Orleans.Runtime.GrainReference gr) => { return new EchoGenericChainGrainReference<T>(gr);}, grainRef, 345675939);
            }
            
            protected internal EchoGenericChainGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal EchoGenericChainGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 345675939;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                EchoGenericChainGrainReference<T> input = ((EchoGenericChainGrainReference<T>)(original));
                return ((EchoGenericChainGrainReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                EchoGenericChainGrainReference<T> input = ((EchoGenericChainGrainReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return EchoGenericChainGrainReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 2054284115));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return EchoGenericChainGrainMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo(T @item)
            {

                return base.InvokeMethodAsync<T>(1341228101, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo2(T @item)
            {

                return base.InvokeMethodAsync<T>(-7571017, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo3(T @item)
            {

                return base.InvokeMethodAsync<T>(48568241, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo4(T @item)
            {

                return base.InvokeMethodAsync<T>(2091432811, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo5(T @item)
            {

                return base.InvokeMethodAsync<T>(-321766269, new object[] {@item} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>.Echo6(T @item)
            {

                return base.InvokeMethodAsync<T>(-850106523, new object[] {@item} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IEchoGenericChainGrain<T>", 345675939)]
    internal class EchoGenericChainGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 345675939;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 345675939:  // IEchoGenericChainGrain`1
                        switch (methodId)
                        {
                            case 1341228101: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -7571017: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo2((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 48568241: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo3((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2091432811: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo4((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -321766269: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo5((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -850106523: 
                                return ((IEchoGenericChainGrain<T>)grain).Echo6((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 345675939:  // IEchoGenericChainGrain`1
                    switch (methodId)
                    {
                        case 1341228101:
                            return "Echo";
                    case -7571017:
                            return "Echo2";
                    case 48568241:
                            return "Echo3";
                    case 2091432811:
                            return "Echo4";
                    case -321766269:
                            return "Echo5";
                    case -850106523:
                            return "Echo6";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class NonGenericBaseFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<INonGenericBase> instead.")]
                        public static INonGenericBase GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(INonGenericBase), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<INonGenericBase> instead.")]
                        public static INonGenericBase GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(INonGenericBase), primaryKey, grainClassNamePrefix));
                        }

            public static INonGenericBase Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return NonGenericBaseReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.INonGenericBase")]
        internal class NonGenericBaseReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.INonGenericBase
        {
            

            public static INonGenericBase Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (INonGenericBase) global::Orleans.Runtime.GrainReference.CastInternal(typeof(INonGenericBase), (global::Orleans.Runtime.GrainReference gr) => { return new NonGenericBaseReference(gr);}, grainRef, 2104871304);
            }
            
            protected internal NonGenericBaseReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal NonGenericBaseReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2104871304;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.INonGenericBase";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                NonGenericBaseReference input = ((NonGenericBaseReference)(original));
                return ((NonGenericBaseReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                NonGenericBaseReference input = ((NonGenericBaseReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return NonGenericBaseReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return NonGenericBaseMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.INonGenericBase.Ping()
            {

                return base.InvokeMethodAsync<object>(-640371947, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.INonGenericBase", 2104871304)]
    internal class NonGenericBaseMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2104871304;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2104871304:  // INonGenericBase
                        switch (methodId)
                        {
                            case -640371947: 
                                return ((INonGenericBase)grain).Ping().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2104871304:  // INonGenericBase
                    switch (methodId)
                    {
                        case -640371947:
                            return "Ping";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class Generic1ArgumentFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGeneric1Argument<T>> instead.")]
                        public static IGeneric1Argument<T> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGeneric1Argument<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGeneric1Argument<T>> instead.")]
                        public static IGeneric1Argument<T> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGeneric1Argument<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGeneric1Argument<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return Generic1ArgumentReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGeneric1Argument<T>")]
        internal class Generic1ArgumentReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGeneric1Argument<T>
        
        {
            

            public static IGeneric1Argument<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGeneric1Argument<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGeneric1Argument<T>), (global::Orleans.Runtime.GrainReference gr) => { return new Generic1ArgumentReference<T>(gr);}, grainRef, -340585198);
            }
            
            protected internal Generic1ArgumentReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal Generic1ArgumentReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -340585198;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGeneric1Argument<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                Generic1ArgumentReference<T> input = ((Generic1ArgumentReference<T>)(original));
                return ((Generic1ArgumentReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                Generic1ArgumentReference<T> input = ((Generic1ArgumentReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return Generic1ArgumentReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 29270695));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return Generic1ArgumentMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGeneric1Argument<T>.Ping(T @t)
            {

                return base.InvokeMethodAsync<T>(596862988, new object[] {@t} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGeneric1Argument<T>", -340585198)]
    internal class Generic1ArgumentMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -340585198;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -340585198:  // IGeneric1Argument`1
                        switch (methodId)
                        {
                            case 596862988: 
                                return ((IGeneric1Argument<T>)grain).Ping((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -340585198:  // IGeneric1Argument`1
                    switch (methodId)
                    {
                        case 596862988:
                            return "Ping";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class Generic2ArgumentsFactory<T, U>
    
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGeneric2Arguments<T,U>> instead.")]
                        public static IGeneric2Arguments<T,U> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGeneric2Arguments<T,U>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGeneric2Arguments<T,U>> instead.")]
                        public static IGeneric2Arguments<T,U> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGeneric2Arguments<T,U>), primaryKey, grainClassNamePrefix));
                        }

            public static IGeneric2Arguments<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return Generic2ArgumentsReference<T,U>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGeneric2Arguments<T,U>")]
        internal class Generic2ArgumentsReference<T, U> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGeneric2Arguments<T, U>
        
        
        {
            

            public static IGeneric2Arguments<T,U> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGeneric2Arguments<T,U>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGeneric2Arguments<T,U>), (global::Orleans.Runtime.GrainReference gr) => { return new Generic2ArgumentsReference<T,U>(gr);}, grainRef, 1208173962);
            }
            
            protected internal Generic2ArgumentsReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal Generic2ArgumentsReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1208173962;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGeneric2Arguments<T,U>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                Generic2ArgumentsReference<T,U> input = ((Generic2ArgumentsReference<T,U>)(original));
                return ((Generic2ArgumentsReference<T,U>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                Generic2ArgumentsReference<T,U> input = ((Generic2ArgumentsReference<T,U>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return Generic2ArgumentsReference<T,U>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -2096972775));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return Generic2ArgumentsMethodInvoker<T,U>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Tuple<T, U>> UnitTests.GrainInterfaces.IGeneric2Arguments<T,U>.Ping(T @t, U @u)
            {

                return base.InvokeMethodAsync<System.Tuple<T,U>>(-417857976, new object[] {@t, @u} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGeneric2Arguments<T,U>", 1208173962)]
    internal class Generic2ArgumentsMethodInvoker<T, U> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1208173962;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1208173962:  // IGeneric2Arguments`2
                        switch (methodId)
                        {
                            case -417857976: 
                                return ((IGeneric2Arguments<T,U>)grain).Ping((T)arguments[0], (U)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1208173962:  // IGeneric2Arguments`2
                    switch (methodId)
                    {
                        case -417857976:
                            return "Ping";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DbGrainFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDbGrain<T>> instead.")]
                        public static IDbGrain<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDbGrain<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDbGrain<T>> instead.")]
                        public static IDbGrain<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDbGrain<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IDbGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DbGrainReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IDbGrain<T>")]
        internal class DbGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IDbGrain<T>
        
        {
            

            public static IDbGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDbGrain<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDbGrain<T>), (global::Orleans.Runtime.GrainReference gr) => { return new DbGrainReference<T>(gr);}, grainRef, 808581941);
            }
            
            protected internal DbGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DbGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 808581941;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IDbGrain<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DbGrainReference<T> input = ((DbGrainReference<T>)(original));
                return ((DbGrainReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DbGrainReference<T> input = ((DbGrainReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DbGrainReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -2076394039));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DbGrainMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IDbGrain<T>.SetValue(T @value)
            {

                return base.InvokeMethodAsync<object>(-1058376616, new object[] {@value} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IDbGrain<T>.GetValue()
            {

                return base.InvokeMethodAsync<T>(637921746, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IDbGrain<T>", 808581941)]
    internal class DbGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 808581941;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 808581941:  // IDbGrain`1
                        switch (methodId)
                        {
                            case -1058376616: 
                                return ((IDbGrain<T>)grain).SetValue((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 637921746: 
                                return ((IDbGrain<T>)grain).GetValue().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 808581941:  // IDbGrain`1
                    switch (methodId)
                    {
                        case -1058376616:
                            return "SetValue";
                    case 637921746:
                            return "GetValue";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GenericPingSelfFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericPingSelf<T>> instead.")]
                        public static IGenericPingSelf<T> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericPingSelf<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGenericPingSelf<T>> instead.")]
                        public static IGenericPingSelf<T> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGenericPingSelf<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGenericPingSelf<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GenericPingSelfReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IGenericPingSelf<T>")]
        internal class GenericPingSelfReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IGenericPingSelf<T>
        
        {
            

            public static IGenericPingSelf<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGenericPingSelf<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGenericPingSelf<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GenericPingSelfReference<T>(gr);}, grainRef, -654198331);
            }
            
            protected internal GenericPingSelfReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GenericPingSelfReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -654198331;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IGenericPingSelf<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GenericPingSelfReference<T> input = ((GenericPingSelfReference<T>)(original));
                return ((GenericPingSelfReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GenericPingSelfReference<T> input = ((GenericPingSelfReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GenericPingSelfReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1126788905));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GenericPingSelfMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericPingSelf<T>.Ping(T @t)
            {

                return base.InvokeMethodAsync<T>(596862988, new object[] {@t} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericPingSelf<T>.PingSelf(T @t)
            {

                return base.InvokeMethodAsync<T>(2017856506, new object[] {@t} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericPingSelf<T>.PingOther(IGenericPingSelf<T> @target, T @t)
            {

                return base.InvokeMethodAsync<T>(-1156227886, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.IGenericPingSelf<T>>() : @target, @t} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericPingSelf<T>.PingSelfThroughOther(IGenericPingSelf<T> @target, T @t)
            {

                return base.InvokeMethodAsync<T>(-973517959, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.IGenericPingSelf<T>>() : @target, @t} );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.IGenericPingSelf<T>.GetLastValue()
            {

                return base.InvokeMethodAsync<T>(1940689642, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericPingSelf<T>.ScheduleDelayedPing(IGenericPingSelf<T> @target, T @t, System.TimeSpan @delay)
            {

                return base.InvokeMethodAsync<object>(1707394585, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.IGenericPingSelf<T>>() : @target, @t, @delay} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IGenericPingSelf<T>.ScheduleDelayedPingToSelfAndDeactivate(IGenericPingSelf<T> @target, T @t, System.TimeSpan @delay)
            {

                return base.InvokeMethodAsync<object>(1503453749, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.IGenericPingSelf<T>>() : @target, @t, @delay} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IGenericPingSelf<T>", -654198331)]
    internal class GenericPingSelfMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -654198331;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -654198331:  // IGenericPingSelf`1
                        switch (methodId)
                        {
                            case 596862988: 
                                return ((IGenericPingSelf<T>)grain).Ping((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2017856506: 
                                return ((IGenericPingSelf<T>)grain).PingSelf((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1156227886: 
                                return ((IGenericPingSelf<T>)grain).PingOther((IGenericPingSelf<T>)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -973517959: 
                                return ((IGenericPingSelf<T>)grain).PingSelfThroughOther((IGenericPingSelf<T>)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1940689642: 
                                return ((IGenericPingSelf<T>)grain).GetLastValue().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1707394585: 
                                return ((IGenericPingSelf<T>)grain).ScheduleDelayedPing((IGenericPingSelf<T>)arguments[0], (T)arguments[1], (TimeSpan)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1503453749: 
                                return ((IGenericPingSelf<T>)grain).ScheduleDelayedPingToSelfAndDeactivate((IGenericPingSelf<T>)arguments[0], (T)arguments[1], (TimeSpan)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -654198331:  // IGenericPingSelf`1
                    switch (methodId)
                    {
                        case 596862988:
                            return "Ping";
                    case 2017856506:
                            return "PingSelf";
                    case -1156227886:
                            return "PingOther";
                    case -973517959:
                            return "PingSelfThroughOther";
                    case 1940689642:
                            return "GetLastValue";
                    case 1707394585:
                            return "ScheduleDelayedPing";
                    case 1503453749:
                            return "ScheduleDelayedPingToSelfAndDeactivate";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MultipleSubscriptionConsumerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMultipleSubscriptionConsumerGrain> instead.")]
                        public static IMultipleSubscriptionConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMultipleSubscriptionConsumerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMultipleSubscriptionConsumerGrain> instead.")]
                        public static IMultipleSubscriptionConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMultipleSubscriptionConsumerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IMultipleSubscriptionConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MultipleSubscriptionConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain")]
        internal class MultipleSubscriptionConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain
        {
            

            public static IMultipleSubscriptionConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMultipleSubscriptionConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMultipleSubscriptionConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MultipleSubscriptionConsumerGrainReference(gr);}, grainRef, -1066298859);
            }
            
            protected internal MultipleSubscriptionConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MultipleSubscriptionConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1066298859;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MultipleSubscriptionConsumerGrainReference input = ((MultipleSubscriptionConsumerGrainReference)(original));
                return ((MultipleSubscriptionConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MultipleSubscriptionConsumerGrainReference input = ((MultipleSubscriptionConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MultipleSubscriptionConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MultipleSubscriptionConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.StreamSubscriptionHandle<int>> UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.StreamSubscriptionHandle<int>> UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.Resume(StreamSubscriptionHandle<Int32> @handle)
            {

                return base.InvokeMethodAsync<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>(-966092664, new object[] {@handle} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.StopConsuming(StreamSubscriptionHandle<Int32> @handle)
            {

                return base.InvokeMethodAsync<object>(469928104, new object[] {@handle} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IList<Orleans.Streams.StreamSubscriptionHandle<int>>> UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.GetAllSubscriptions(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IList<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>>(-2026651720, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Orleans.Streams.StreamSubscriptionHandle<int>, int>> UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<Orleans.Streams.StreamSubscriptionHandle<System.Int32>,System.Int32>>(2130169286, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.ClearNumberConsumed()
            {

                return base.InvokeMethodAsync<object>(1012128928, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain.Deactivate()
            {

                return base.InvokeMethodAsync<object>(1834577625, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IMultipleSubscriptionConsumerGrain", -1066298859)]
    internal class MultipleSubscriptionConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1066298859;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1066298859:  // IMultipleSubscriptionConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -966092664: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).Resume((Orleans.Streams.StreamSubscriptionHandle<Int32>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 469928104: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).StopConsuming((Orleans.Streams.StreamSubscriptionHandle<Int32>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2026651720: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).GetAllSubscriptions((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2130169286: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1012128928: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).ClearNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1834577625: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).Deactivate().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1066298859:  // IMultipleSubscriptionConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case -966092664:
                            return "Resume";
                    case 469928104:
                            return "StopConsuming";
                    case -2026651720:
                            return "GetAllSubscriptions";
                    case 2130169286:
                            return "GetNumberConsumed";
                    case 1012128928:
                            return "ClearNumberConsumed";
                    case 1834577625:
                            return "Deactivate";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_ProducerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_ProducerGrain> instead.")]
                        public static ISampleStreaming_ProducerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_ProducerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_ProducerGrain> instead.")]
                        public static ISampleStreaming_ProducerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_ProducerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISampleStreaming_ProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_ProducerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain")]
        internal class SampleStreaming_ProducerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain
        {
            

            public static ISampleStreaming_ProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISampleStreaming_ProducerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISampleStreaming_ProducerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_ProducerGrainReference(gr);}, grainRef, 1136982742);
            }
            
            protected internal SampleStreaming_ProducerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_ProducerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1136982742;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_ProducerGrainReference input = ((SampleStreaming_ProducerGrainReference)(original));
                return ((SampleStreaming_ProducerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_ProducerGrainReference input = ((SampleStreaming_ProducerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_ProducerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_ProducerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.BecomeProducer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(266083571, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.StartPeriodicProducing()
            {

                return base.InvokeMethodAsync<object>(-2001831838, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.StopPeriodicProducing()
            {

                return base.InvokeMethodAsync<object>(755705728, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.GetNumberProduced()
            {

                return base.InvokeMethodAsync<System.Int32>(-970329735, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.ClearNumberProduced()
            {

                return base.InvokeMethodAsync<object>(1732143298, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain.Produce()
            {

                return base.InvokeMethodAsync<object>(1996957051, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISampleStreaming_ProducerGrain", 1136982742)]
    internal class SampleStreaming_ProducerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1136982742;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1136982742:  // ISampleStreaming_ProducerGrain
                        switch (methodId)
                        {
                            case 266083571: 
                                return ((ISampleStreaming_ProducerGrain)grain).BecomeProducer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2001831838: 
                                return ((ISampleStreaming_ProducerGrain)grain).StartPeriodicProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 755705728: 
                                return ((ISampleStreaming_ProducerGrain)grain).StopPeriodicProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -970329735: 
                                return ((ISampleStreaming_ProducerGrain)grain).GetNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1732143298: 
                                return ((ISampleStreaming_ProducerGrain)grain).ClearNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1996957051: 
                                return ((ISampleStreaming_ProducerGrain)grain).Produce().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1136982742:  // ISampleStreaming_ProducerGrain
                    switch (methodId)
                    {
                        case 266083571:
                            return "BecomeProducer";
                    case -2001831838:
                            return "StartPeriodicProducing";
                    case 755705728:
                            return "StopPeriodicProducing";
                    case -970329735:
                            return "GetNumberProduced";
                    case 1732143298:
                            return "ClearNumberProduced";
                    case 1996957051:
                            return "Produce";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_ConsumerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_ConsumerGrain> instead.")]
                        public static ISampleStreaming_ConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_ConsumerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_ConsumerGrain> instead.")]
                        public static ISampleStreaming_ConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_ConsumerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISampleStreaming_ConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_ConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain")]
        internal class SampleStreaming_ConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain
        {
            

            public static ISampleStreaming_ConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISampleStreaming_ConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISampleStreaming_ConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_ConsumerGrainReference(gr);}, grainRef, -124728426);
            }
            
            protected internal SampleStreaming_ConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_ConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -124728426;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_ConsumerGrainReference input = ((SampleStreaming_ConsumerGrainReference)(original));
                return ((SampleStreaming_ConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_ConsumerGrainReference input = ((SampleStreaming_ConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_ConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_ConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain", -124728426)]
    internal class SampleStreaming_ConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -124728426;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -124728426:  // ISampleStreaming_ConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_ConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_ConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_ConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -124728426:  // ISampleStreaming_ConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_InlineConsumerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_InlineConsumerGrain> instead.")]
                        public static ISampleStreaming_InlineConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_InlineConsumerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISampleStreaming_InlineConsumerGrain> instead.")]
                        public static ISampleStreaming_InlineConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISampleStreaming_InlineConsumerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISampleStreaming_InlineConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_InlineConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISampleStreaming_InlineConsumerGrain")]
        internal class SampleStreaming_InlineConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISampleStreaming_InlineConsumerGrain
        {
            

            public static ISampleStreaming_InlineConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISampleStreaming_InlineConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISampleStreaming_InlineConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_InlineConsumerGrainReference(gr);}, grainRef, -2090853829);
            }
            
            protected internal SampleStreaming_InlineConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_InlineConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -2090853829;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISampleStreaming_InlineConsumerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_InlineConsumerGrainReference input = ((SampleStreaming_InlineConsumerGrainReference)(original));
                return ((SampleStreaming_InlineConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_InlineConsumerGrainReference input = ((SampleStreaming_InlineConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_InlineConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -124728426));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_InlineConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISampleStreaming_ConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISampleStreaming_InlineConsumerGrain", -2090853829)]
    internal class SampleStreaming_InlineConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -2090853829;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2090853829:  // ISampleStreaming_InlineConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -124728426:  // ISampleStreaming_ConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_ConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_ConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_ConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -2090853829:  // ISampleStreaming_InlineConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -124728426:  // ISampleStreaming_ConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGenericGrainFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain<T>> instead.")]
                        public static ISimpleGenericGrain<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGenericGrain<T>> instead.")]
                        public static ISimpleGenericGrain<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGenericGrain<T>), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleGenericGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGenericGrainReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain<T>")]
        internal class SimpleGenericGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGenericGrain<T>
        
        {
            

            public static ISimpleGenericGrain<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGenericGrain<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGenericGrain<T>), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGenericGrainReference<T>(gr);}, grainRef, -1882632188);
            }
            
            protected internal SimpleGenericGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGenericGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1882632188;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGenericGrain<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGenericGrainReference<T> input = ((SimpleGenericGrainReference<T>)(original));
                return ((SimpleGenericGrainReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGenericGrainReference<T> input = ((SimpleGenericGrainReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGenericGrainReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 738359988));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGenericGrainMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain<T>.Set(T @t)
            {

                return base.InvokeMethodAsync<object>(-1901180668, new object[] {@t} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain<T>.Transform()
            {

                return base.InvokeMethodAsync<object>(-2090495956, null );
            }
            
            System.Threading.Tasks.Task<T> UnitTests.GrainInterfaces.ISimpleGenericGrain<T>.Get()
            {

                return base.InvokeMethodAsync<T>(-940922787, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGenericGrain<T>.CompareGrainReferences(ISimpleGenericGrain<T> @clientRef)
            {

                return base.InvokeMethodAsync<object>(254280809, new object[] {@clientRef is global::Orleans.Grain ? @clientRef.AsReference<UnitTests.GrainInterfaces.ISimpleGenericGrain<T>>() : @clientRef} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGenericGrain<T>", -1882632188)]
    internal class SimpleGenericGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1882632188;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1882632188:  // ISimpleGenericGrain`1
                        switch (methodId)
                        {
                            case -1901180668: 
                                return ((ISimpleGenericGrain<T>)grain).Set((T)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2090495956: 
                                return ((ISimpleGenericGrain<T>)grain).Transform().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -940922787: 
                                return ((ISimpleGenericGrain<T>)grain).Get().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 254280809: 
                                return ((ISimpleGenericGrain<T>)grain).CompareGrainReferences((ISimpleGenericGrain<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1882632188:  // ISimpleGenericGrain`1
                    switch (methodId)
                    {
                        case -1901180668:
                            return "Set";
                    case -2090495956:
                            return "Transform";
                    case -940922787:
                            return "Get";
                    case 254280809:
                            return "CompareGrainReferences";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SomeGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISomeGrain> instead.")]
                        public static ISomeGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISomeGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISomeGrain> instead.")]
                        public static ISomeGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISomeGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISomeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SomeGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISomeGrain")]
        internal class SomeGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISomeGrain
        {
            

            public static ISomeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISomeGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISomeGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SomeGrainReference(gr);}, grainRef, -914758024);
            }
            
            protected internal SomeGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SomeGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -914758024;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISomeGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SomeGrainReference input = ((SomeGrainReference)(original));
                return ((SomeGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SomeGrainReference input = ((SomeGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SomeGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SomeGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISomeGrain.Do(Outsider @o)
            {

                return base.InvokeMethodAsync<object>(2103304988, new object[] {@o} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISomeGrain", -914758024)]
    internal class SomeGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -914758024;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -914758024:  // ISomeGrain
                        switch (methodId)
                        {
                            case 2103304988: 
                                return ((ISomeGrain)grain).Do((Outsider)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -914758024:  // ISomeGrain
                    switch (methodId)
                    {
                        case 2103304988:
                            return "Do";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGrain> instead.")]
                        public static ISimpleGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleGrain> instead.")]
                        public static ISimpleGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGrain")]
        internal class SimpleGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGrain
        {
            

            public static ISimpleGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGrainReference(gr);}, grainRef, 1638410893);
            }
            
            protected internal SimpleGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1638410893;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGrainReference input = ((SimpleGrainReference)(original));
                return ((SimpleGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGrainReference input = ((SimpleGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @b)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGrain", 1638410893)]
    internal class SimpleGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1638410893;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleObserverableGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleObserverableGrain> instead.")]
                        public static ISimpleObserverableGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleObserverableGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimpleObserverableGrain> instead.")]
                        public static ISimpleObserverableGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimpleObserverableGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISimpleObserverableGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleObserverableGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleObserverableGrain")]
        internal class SimpleObserverableGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleObserverableGrain
        {
            

            public static ISimpleObserverableGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleObserverableGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleObserverableGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleObserverableGrainReference(gr);}, grainRef, -1750443332);
            }
            
            protected internal SimpleObserverableGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleObserverableGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1750443332;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleObserverableGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleObserverableGrainReference input = ((SimpleObserverableGrainReference)(original));
                return ((SimpleObserverableGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleObserverableGrainReference input = ((SimpleObserverableGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleObserverableGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1638410893));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleObserverableGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleObserverableGrain.Subscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(1453769850, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleObserverableGrain.Unsubscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(-1935244785, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @b)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleObserverableGrain", -1750443332)]
    internal class SimpleObserverableGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1750443332;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1750443332:  // ISimpleObserverableGrain
                        switch (methodId)
                        {
                            case 1453769850: 
                                return ((ISimpleObserverableGrain)grain).Subscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1935244785: 
                                return ((ISimpleObserverableGrain)grain).Unsubscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2129932222: 
                                return ((ISimpleObserverableGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleObserverableGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleObserverableGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleObserverableGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleObserverableGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleObserverableGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1750443332:  // ISimpleObserverableGrain
                    switch (methodId)
                    {
                        case 1453769850:
                            return "Subscribe";
                    case -1935244785:
                            return "Unsubscribe";
                    case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGrainObserverFactory
    {
        

            public static ISimpleGrainObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGrainObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<ISimpleGrainObserver> CreateObjectReference(ISimpleGrainObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new SimpleGrainObserverMethodInvoker();
            return SimpleGrainObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(ISimpleGrainObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimpleGrainObserver")]
        internal class SimpleGrainObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGrainObserver
        {
            

            public static ISimpleGrainObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimpleGrainObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimpleGrainObserver), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGrainObserverReference(gr);}, grainRef, -1394652141);
            }
            
            protected internal SimpleGrainObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGrainObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1394652141;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimpleGrainObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGrainObserverReference input = ((SimpleGrainObserverReference)(original));
                return ((SimpleGrainObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGrainObserverReference input = ((SimpleGrainObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGrainObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGrainObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void UnitTests.GrainInterfaces.ISimpleGrainObserver.StateChanged(int @a, int @b)
            {

                    base.InvokeOneWayMethod(938096474, new object[] {@a, @b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimpleGrainObserver", -1394652141)]
    internal class SimpleGrainObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1394652141;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1394652141:  // ISimpleGrainObserver
                        switch (methodId)
                        {
                            case 938096474: 
                                ((ISimpleGrainObserver)grain).StateChanged((Int32)arguments[0], (Int32)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1394652141:  // ISimpleGrainObserver
                    switch (methodId)
                    {
                        case 938096474:
                            return "StateChanged";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ObserverGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IObserverGrain> instead.")]
                        public static IObserverGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IObserverGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IObserverGrain> instead.")]
                        public static IObserverGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IObserverGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IObserverGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ObserverGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.IObserverGrain")]
        internal class ObserverGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IObserverGrain
        {
            

            public static IObserverGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IObserverGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IObserverGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ObserverGrainReference(gr);}, grainRef, -378267896);
            }
            
            protected internal ObserverGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ObserverGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -378267896;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.IObserverGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ObserverGrainReference input = ((ObserverGrainReference)(original));
                return ((ObserverGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ObserverGrainReference input = ((ObserverGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ObserverGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ObserverGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IObserverGrain.SetTarget(UnitTests.GrainInterfaces.ISimpleObserverableGrain @target)
            {

                return base.InvokeMethodAsync<object>(-1674744194, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.ISimpleObserverableGrain>() : @target} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IObserverGrain.Subscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(1453769850, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.IObserverGrain", -378267896)]
    internal class ObserverGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -378267896;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -378267896:  // IObserverGrain
                        switch (methodId)
                        {
                            case -1674744194: 
                                return ((IObserverGrain)grain).SetTarget((ISimpleObserverableGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1453769850: 
                                return ((IObserverGrain)grain).Subscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -378267896:  // IObserverGrain
                    switch (methodId)
                    {
                        case -1674744194:
                            return "SetTarget";
                    case 1453769850:
                            return "Subscribe";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimplePersistentGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimplePersistentGrain> instead.")]
                        public static ISimplePersistentGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimplePersistentGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ISimplePersistentGrain> instead.")]
                        public static ISimplePersistentGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISimplePersistentGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ISimplePersistentGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimplePersistentGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ISimplePersistentGrain")]
        internal class SimplePersistentGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimplePersistentGrain
        {
            

            public static ISimplePersistentGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ISimplePersistentGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ISimplePersistentGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimplePersistentGrainReference(gr);}, grainRef, 1227585576);
            }
            
            protected internal SimplePersistentGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimplePersistentGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1227585576;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ISimplePersistentGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimplePersistentGrainReference input = ((SimplePersistentGrainReference)(original));
                return ((SimplePersistentGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimplePersistentGrainReference input = ((SimplePersistentGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimplePersistentGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1638410893));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimplePersistentGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimplePersistentGrain.SetA(int @a, bool @deactivate)
            {

                return base.InvokeMethodAsync<object>(1671394104, new object[] {@a, @deactivate} );
            }
            
            System.Threading.Tasks.Task<System.Guid> UnitTests.GrainInterfaces.ISimplePersistentGrain.GetVersion()
            {

                return base.InvokeMethodAsync<System.Guid>(2090373029, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @b)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@b} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, null );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ISimplePersistentGrain", 1227585576)]
    internal class SimplePersistentGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1227585576;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1227585576:  // ISimplePersistentGrain
                        switch (methodId)
                        {
                            case 1671394104: 
                                return ((ISimplePersistentGrain)grain).SetA((Int32)arguments[0], (Boolean)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2090373029: 
                                return ((ISimplePersistentGrain)grain).GetVersion().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2129932222: 
                                return ((ISimplePersistentGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimplePersistentGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimplePersistentGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimplePersistentGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimplePersistentGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimplePersistentGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1227585576:  // ISimplePersistentGrain
                    switch (methodId)
                    {
                        case 1671394104:
                            return "SetA";
                    case 2090373029:
                            return "GetVersion";
                    case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class LivenessTestGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ILivenessTestGrain> instead.")]
                        public static ILivenessTestGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ILivenessTestGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<ILivenessTestGrain> instead.")]
                        public static ILivenessTestGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(ILivenessTestGrain), primaryKey, grainClassNamePrefix));
                        }

            public static ILivenessTestGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return LivenessTestGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.ILivenessTestGrain")]
        internal class LivenessTestGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ILivenessTestGrain
        {
            

            public static ILivenessTestGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (ILivenessTestGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(ILivenessTestGrain), (global::Orleans.Runtime.GrainReference gr) => { return new LivenessTestGrainReference(gr);}, grainRef, -1840629153);
            }
            
            protected internal LivenessTestGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal LivenessTestGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1840629153;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.ILivenessTestGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                LivenessTestGrainReference input = ((LivenessTestGrainReference)(original));
                return ((LivenessTestGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                LivenessTestGrainReference input = ((LivenessTestGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return LivenessTestGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return LivenessTestGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ILivenessTestGrain.GetLabel()
            {

                return base.InvokeMethodAsync<System.String>(815427771, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ILivenessTestGrain.SetLabel(string @label)
            {

                return base.InvokeMethodAsync<object>(137111425, new object[] {@label} );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ILivenessTestGrain.GetRuntimeInstanceId()
            {

                return base.InvokeMethodAsync<System.String>(327261474, null );
            }
            
            System.Threading.Tasks.Task<string> UnitTests.GrainInterfaces.ILivenessTestGrain.GetUniqueId()
            {

                return base.InvokeMethodAsync<System.String>(1156956714, null );
            }
            
            System.Threading.Tasks.Task<UnitTests.GrainInterfaces.ILivenessTestGrain> UnitTests.GrainInterfaces.ILivenessTestGrain.GetGrainReference()
            {

                return base.InvokeMethodAsync<UnitTests.GrainInterfaces.ILivenessTestGrain>(2018329561, null );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ILivenessTestGrain.StartTimer()
            {

                return base.InvokeMethodAsync<object>(-1685414735, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.ILivenessTestGrain", -1840629153)]
    internal class LivenessTestGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1840629153;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1840629153:  // ILivenessTestGrain
                        switch (methodId)
                        {
                            case 815427771: 
                                return ((ILivenessTestGrain)grain).GetLabel().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 137111425: 
                                return ((ILivenessTestGrain)grain).SetLabel((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 327261474: 
                                return ((ILivenessTestGrain)grain).GetRuntimeInstanceId().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1156956714: 
                                return ((ILivenessTestGrain)grain).GetUniqueId().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2018329561: 
                                return ((ILivenessTestGrain)grain).GetGrainReference().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1685414735: 
                                return ((ILivenessTestGrain)grain).StartTimer().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1840629153:  // ILivenessTestGrain
                    switch (methodId)
                    {
                        case 815427771:
                            return "GetLabel";
                    case 137111425:
                            return "SetLabel";
                    case 327261474:
                            return "GetRuntimeInstanceId";
                    case 1156956714:
                            return "GetUniqueId";
                    case 2018329561:
                            return "GetGrainReference";
                    case -1685414735:
                            return "StartTimer";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace TestGrainInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using System.Collections;
    using System.Runtime.InteropServices;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.16")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class OutsiderSerialization
    {
        
        static OutsiderSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Outsider input = ((Outsider)(original));
            Outsider result = new Outsider();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Outsider input = ((Outsider)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Outsider result = new Outsider();
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Outsider), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
